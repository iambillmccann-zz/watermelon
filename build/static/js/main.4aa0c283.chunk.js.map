{"version":3,"sources":["firebase.js","services/authentication.js","services/appearance.js","components/EmptyState/EmptyState.js","components/ErrorBoundary/ErrorBoundary.js","components/LaunchScreen/LaunchScreen.js","components/UserAvatar/UserAvatar.js","components/Bar/Bar.js","components/HomeContent/HomeContent.js","components/AdminContent/AdminContent.js","components/Loader/Loader.js","components/UserCard/UserCard.js","components/UserContent/UserContent.js","components/NotFoundContent/NotFoundContent.js","components/Router/Router.js","components/AboutDialog/AboutDialog.js","authProviders.js","components/AuthProviderList/AuthProviderList.js","constraints.js","components/SignUpDialog/SignUpDialog.js","components/SignInDialog/SignInDialog.js","components/AccountTab/AccountTab.js","components/AppearanceTab/AppearanceTab.js","components/LinksTab/LinksTab.js","components/SecurityTab/SecurityTab.js","components/SettingsDialog/SettingsDialog.js","components/DeleteAccountDialog/DeleteAccountDialog.js","components/AlertDialog/AlertDialog.js","components/DialogHost/DialogHost.js","components/App/App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","firestore","storage","authentication","fields","Promise","resolve","reject","firstName","lastName","username","emailAddress","password","currentUser","createUserWithEmailAndPassword","then","value","user","uid","collection","doc","set","logEvent","method","catch","reason","merge","signInWithEmailAndPassword","userDocumentReference","get","source","exists","sendSignInLinkToEmail","url","handleCodeInApp","localStorage","setItem","emailLink","signInWithEmailLink","removeItem","providerId","provider","OAuthProvider","signInWithPopup","linkWithPopup","unlink","providerData","find","authProvider","signOut","sendPasswordResetEmail","avatar","includes","type","size","avatarReference","ref","child","put","uploadTaskSnapshot","getDownloadURL","updateProfile","photoURL","delete","update","updateEmail","updatePassword","lastPasswordChange","FieldValue","serverTimestamp","sendEmailVerification","getIdTokenResult","idTokenResult","claims","roles","getRoles","displayName","charAt","email","emailVerified","profileCompletion","forEach","field","length","Math","floor","userData","metadata","creationTime","moment","securityRating","toDate","diff","colors","red","id","name","import","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","gray","blueGray","getColor","colorId","camelCase","defaultPrimaryColor","defaultSecondaryColor","defaultTheme","createMuiTheme","palette","primary","secondary","primaryColor","secondaryColor","dark","appearance","defaultDark","isDefaultTheme","theme","createTheme","changeTheme","changePrimaryColor","changeSecondaryColor","changeDark","changeSyncAppearance","syncAppearance","resetTheme","EmptyState","fontSize","variant","this","props","padding","icon","title","description","Box","style","transform","position","top","left","textAlign","clone","color","Typography","Component","defaultProps","ErrorBoundary","state","hasError","eventId","error","errorInfo","Sentry","scope","setExtras","setState","children","LaunchScreen","classes","className","center","CircularProgress","withStyles","UserAvatar","context","defaultCursor","photoUrl","Avatar","alt","src","nameInitials","getNameInitials","ListItemAvatar","cursor","Bar","openMenu","event","anchorEl","currentTarget","menu","closeMenu","performingAction","onAboutClick","onSettingsClick","onSignOutClick","onSignUpClick","onSignInClick","menuItems","onClick","to","divide","AppBar","Toolbar","display","flexGrow","mr","Button","component","Link","IconButton","disabled","Object","assign","Menu","open","Boolean","onClose","map","menuItem","index","hasOwnProperty","condition","MenuItem","key","Divider","ButtonGroup","HomeContent","window","location","href","isSignInWithEmailLink","getItem","history","push","openSnackbar","code","message","finally","withRouter","AdminContent","useStyles","makeStyles","Loader","UserCard","Card","CardHeader","subheader","grid","margin","width","UserContent","useState","loading","setLoading","setUser","setError","userId","useParams","useEffect","onSnapshot","snapshot","data","Grid","container","justify","spacing","item","xs","NotFoundContent","Router","bar","basename","REACT_APP_BASENAME","path","exact","AboutDialog","dialogProps","Dialog","DialogTitle","disableTypography","Tooltip","closeButton","DialogContent","List","disablePadding","ListItem","ListItemText","right","authProviders","AuthProviderList","gutterBottom","onAuthProviderClick","mb","fullWidth","orientation","AuthProviderButton","root","startIcon","constraints","presence","allowEmpty","minimum","maximum","emailAddressConfirmation","equality","attribute","passwordConfirmation","initialState","errors","SignUpDialog","signUp","validate","signUpWithEmailAddressAndPassword","signInWithAuthProvider","handleKeyPress","altKey","ctrlKey","metaKey","shiftKey","handleExited","handleEmailAddressChange","target","handleEmailAddressConfirmationChange","handlePasswordChange","handlePasswordConfirmationChange","maxWidth","disableBackdropClick","disableEscapeKeyDown","onKeyPress","onExited","Hidden","xsDown","direction","divider","TextField","autoComplete","helperText","label","placeholder","required","onChange","smUp","DialogActions","marginRight","marginBottom","SignInDialog","getSignInButton","signIn","resetPassword","showingField","avatarUrl","loadingAvatar","sentVerificationEmail","AccountTab","getNameInitialsOrIcon","personIcon","uploadAvatar","changeAvatar","getProfileCompletion","removeAvatar","URL","revokeObjectURL","showField","fieldId","hideFields","callback","changeFirstName","changeLastName","changeUsername","changeEmailAddress","verifyEmailAddress","changeField","handleKeyDown","handleAvatarChange","files","createObjectURL","handleFirstNameChange","handleLastNameChange","handleUsernameChange","onDeleteAccountClick","hasFirstName","hasLastName","hasUsername","dialogContent","alignItems","Badge","badge","badgeContent","Fab","sizeSmall","small","loadingBadge","Fade","transitionDelay","in","unmountOnExit","thickness","hidden","accept","htmlFor","ListItemIcon","autoFocus","onBlur","onKeyDown","ListItemSecondaryAction","lastSignInTime","format","mt","light","getSecurityRating","paddingTop","marginLeft","height","minHeight","AppearanceTab","handlePrimaryColorChange","handleSecondaryColorChange","handleDarkModeChange","checked","handleResetThemeClick","primaryColorLabelWidth","secondaryColorLabelWidth","primaryColorLabel","React","createRef","secondaryColorLabel","FormControl","InputLabel","Select","native","labelWidth","keys","Checkbox","Switch","current","offsetWidth","LinksTab","linkAuthProvider","unlinkAuthProvider","authProviderData","identifier","phoneNumber","SecurityTab","changePassword","hasChangedPassword","tabs","selectedTab","SettingsDialog","handleTabChange","handleIndexChange","Tabs","overflow","indicatorColor","textColor","tab","Tab","onChangeIndex","DeleteAccountDialog","deleteAccount","DialogContentText","AlertDialog","contentText","dismissiveAction","confirmingAction","acknowledgementAction","console","noTitlePadding","DialogHost","dialogs","aboutDialog","signUpDialog","signInDialog","settingsDialog","deleteAccountDialog","signOutDialog","smDown","fullScreen","mdUp","ready","snackbar","autoHideDuration","App","resetState","setTheme","openDialog","dialogId","dialog","undefined","closeDialog","closeAllDialogs","readingTime","time","closeSnackbar","clearMessage","CssBaseline","Snackbar","onAuthStateChangedObserver","onAuthStateChanged","userDocumentSnapshotListener","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","dsn","release","ReactDOM","render","document","getElementById","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4aa0c283.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\n\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport \"firebase/performance\";\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n});\n\nexport default firebase;\nexport const analytics = firebase.analytics();\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const storage = firebase.storage();\nexport const performance = firebase.performance();\n","import firebase, { analytics, auth, firestore, storage } from \"../firebase\";\n\nimport moment from \"moment\";\n\nconst authentication = {};\n\nauthentication.signUp = fields => {\n  return new Promise((resolve, reject) => {\n    if (!fields) {\n      reject();\n\n      return;\n    }\n\n    const firstName = fields.firstName;\n    const lastName = fields.lastName;\n    const username = fields.username;\n    const emailAddress = fields.emailAddress;\n    const password = fields.password;\n\n    if (!firstName || !lastName || !username || !emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    if (auth.currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth\n      .createUserWithEmailAndPassword(emailAddress, password)\n      .then(value => {\n        const user = value.user;\n\n        if (!user) {\n          reject();\n\n          return;\n        }\n\n        const uid = user.uid;\n\n        if (!uid) {\n          reject();\n\n          return;\n        }\n\n        const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n        userDocumentReference\n          .set({\n            firstName: firstName,\n            lastName: lastName,\n            username: username\n          })\n          .then(value => {\n            analytics.logEvent(\"sign_up\", {\n              method: \"password\"\n            });\n\n            resolve(value);\n          })\n          .catch(reason => {\n            reject(reason);\n          });\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.signUpWithEmailAddressAndPassword = (emailAddress, password) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    if (auth.currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth\n      .createUserWithEmailAndPassword(emailAddress, password)\n      .then(value => {\n        const user = value.user;\n\n        if (!user) {\n          reject();\n\n          return;\n        }\n\n        const uid = user.uid;\n\n        if (!uid) {\n          reject();\n\n          return;\n        }\n\n        const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n        userDocumentReference\n          .set({}, { merge: true })\n          .then(value => {\n            analytics.logEvent(\"sign_up\", {\n              method: \"password\"\n            });\n\n            resolve(value);\n          })\n          .catch(reason => {\n            reject(reason);\n          });\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.signIn = (emailAddress, password) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    if (auth.currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth\n      .signInWithEmailAndPassword(emailAddress, password)\n      .then(value => {\n        const user = value.user;\n\n        if (!user) {\n          reject();\n\n          return;\n        }\n\n        const uid = user.uid;\n\n        if (!uid) {\n          reject();\n\n          return;\n        }\n\n        const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n        userDocumentReference\n          .get({ source: \"server\" })\n          .then(value => {\n            if (value.exists) {\n              analytics.logEvent(\"login\", {\n                method: \"password\"\n              });\n\n              resolve(user);\n            } else {\n              userDocumentReference\n                .set({}, { merge: true })\n                .then(value => {\n                  analytics.logEvent(\"login\", {\n                    method: \"password\"\n                  });\n\n                  resolve(user);\n                })\n                .catch(reason => {\n                  reject(reason);\n                });\n            }\n          })\n          .catch(reason => {\n            reject(reason);\n          });\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.sendSignInLinkToEmail = emailAddress => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress) {\n      reject();\n\n      return;\n    }\n\n    if (auth.currentUser) {\n      reject();\n\n      return;\n    }\n\n    const actionCodeSettings = {\n      url: process.env.REACT_APP_HOMEPAGE,\n      handleCodeInApp: true\n    };\n\n    auth\n      .sendSignInLinkToEmail(emailAddress, actionCodeSettings)\n      .then(value => {\n        analytics.logEvent(\"send_sign_in_link_to_email\");\n\n        localStorage.setItem(\"emailAddress\", emailAddress);\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.signInWithEmailLink = (emailAddress, emailLink) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress || !emailLink) {\n      reject();\n\n      return;\n    }\n\n    if (auth.currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth\n      .signInWithEmailLink(emailAddress, emailLink)\n      .then(value => {\n        analytics.logEvent(\"login\", {\n          method: \"email-link\"\n        });\n\n        localStorage.removeItem(\"emailAddress\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.signInWithAuthProvider = providerId => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const provider = new firebase.auth.OAuthProvider(providerId);\n\n    if (!provider) {\n      reject();\n\n      return;\n    }\n\n    if (auth.currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth\n      .signInWithPopup(provider)\n      .then(value => {\n        const user = value.user;\n\n        if (!user) {\n          reject();\n\n          return;\n        }\n\n        const uid = user.uid;\n\n        if (!uid) {\n          reject();\n\n          return;\n        }\n\n        const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n        userDocumentReference\n          .get({ source: \"server\" })\n          .then(value => {\n            if (value.exists) {\n              analytics.logEvent(\"login\", {\n                method: providerId\n              });\n\n              resolve(user);\n            } else {\n              userDocumentReference\n                .set({}, { merge: true })\n                .then(value => {\n                  analytics.logEvent(\"login\", {\n                    method: providerId\n                  });\n\n                  resolve(user);\n                })\n                .catch(reason => {\n                  reject(reason);\n                });\n            }\n          })\n          .catch(reason => {\n            reject(reason);\n          });\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.linkAuthProvider = providerId => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const provider = new firebase.auth.OAuthProvider(providerId);\n\n    if (!provider) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .linkWithPopup(provider)\n      .then(value => {\n        analytics.logEvent(\"link_auth_provider\", {\n          providerId: providerId\n        });\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.unlinkAuthProvider = providerId => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .unlink(providerId)\n      .then(value => {\n        analytics.logEvent(\"unlink_auth_provider\", {\n          providerId: providerId\n        });\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.authProviderData = providerId => {\n  if (!providerId) {\n    return;\n  }\n\n  const currentUser = auth.currentUser;\n\n  if (!currentUser) {\n    return;\n  }\n\n  const providerData = currentUser.providerData;\n\n  if (!providerData) {\n    return;\n  }\n\n  return providerData.find(\n    authProvider => authProvider.providerId === providerId\n  );\n};\n\nauthentication.signOut = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth\n      .signOut()\n      .then(value => {\n        analytics.logEvent(\"sign_out\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.resetPassword = emailAddress => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress) {\n      reject();\n\n      return;\n    }\n\n    if (auth.currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth\n      .sendPasswordResetEmail(emailAddress)\n      .then(value => {\n        analytics.logEvent(\"reset_password\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.changeAvatar = avatar => {\n  return new Promise((resolve, reject) => {\n    if (!avatar) {\n      reject();\n\n      return;\n    }\n\n    const avatarFileTypes = [\n      \"image/gif\",\n      \"image/jpeg\",\n      \"image/png\",\n      \"image/webp\",\n      \"image/svg+xml\"\n    ];\n\n    if (!avatarFileTypes.includes(avatar.type)) {\n      reject();\n\n      return;\n    }\n\n    if (avatar.size > 20 * 1024 * 1024) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const avatarReference = storage\n      .ref()\n      .child(\"images\")\n      .child(\"avatars\")\n      .child(uid);\n\n    avatarReference\n      .put(avatar)\n      .then(uploadTaskSnapshot => {\n        avatarReference\n          .getDownloadURL()\n          .then(value => {\n            currentUser\n              .updateProfile({\n                photoURL: value\n              })\n              .then(value => {\n                analytics.logEvent(\"change_avatar\");\n\n                resolve(value);\n              })\n              .catch(reason => {\n                reject(reason);\n              });\n          })\n          .catch(reason => {\n            reject(reason);\n          });\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.removeAvatar = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .updateProfile({\n        photoURL: null\n      })\n      .then(value => {\n        const avatarReference = storage\n          .ref()\n          .child(\"images\")\n          .child(\"avatars\")\n          .child(uid);\n\n        avatarReference\n          .delete()\n          .then(value => {\n            analytics.logEvent(\"remove_avatar\");\n\n            resolve(value);\n          })\n          .catch(reason => {\n            reject(reason);\n          });\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.changeFirstName = firstName => {\n  return new Promise((resolve, reject) => {\n    if (!firstName) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        firstName: firstName\n      })\n      .then(value => {\n        analytics.logEvent(\"change_first_name\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.changeLastName = lastName => {\n  return new Promise((resolve, reject) => {\n    if (!lastName) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        lastName: lastName\n      })\n      .then(value => {\n        analytics.logEvent(\"change_last_name\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.changeUsername = username => {\n  return new Promise((resolve, reject) => {\n    if (!username) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        username: username\n      })\n      .then(value => {\n        analytics.logEvent(\"change_username\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.changeEmailAddress = emailAddress => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .updateEmail(emailAddress)\n      .then(value => {\n        analytics.logEvent(\"change_email_address\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.changePassword = password => {\n  return new Promise((resolve, reject) => {\n    if (!password) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .updatePassword(password)\n      .then(value => {\n        const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n        userDocumentReference\n          .update({\n            lastPasswordChange: firebase.firestore.FieldValue.serverTimestamp()\n          })\n          .then(value => {\n            analytics.logEvent(\"change_password\");\n\n            resolve(value);\n          })\n          .catch(reason => {\n            reject(reason);\n          });\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.verifyEmailAddress = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .sendEmailVerification()\n      .then(value => {\n        analytics.logEvent(\"verify_email_address\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.deleteAccount = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .delete()\n      .then(value => {\n        analytics.logEvent(\"delete_account\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.getRoles = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .getIdTokenResult()\n      .then(idTokenResult => {\n        resolve(idTokenResult.claims.roles);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.isAdmin = () => {\n  return new Promise((resolve, reject) => {\n    authentication\n      .getRoles()\n      .then(value => {\n        resolve(value.includes(\"admin\"));\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.isPremium = () => {\n  return new Promise((resolve, reject) => {\n    authentication\n      .getRoles()\n      .then(value => {\n        resolve(value.includes(\"premium\"));\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.getName = fields => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const username = fields.username;\n  const displayName = fields.displayName;\n  const lastName = fields.lastName;\n\n  if (firstName) {\n    return firstName;\n  }\n\n  if (username) {\n    return username;\n  }\n\n  if (displayName) {\n    return displayName;\n  }\n\n  if (lastName) {\n    return lastName;\n  }\n\n  return null;\n};\n\nauthentication.getFullName = fields => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const lastName = fields.lastName;\n  const displayName = fields.displayName;\n\n  if (firstName && lastName) {\n    return `${firstName} ${lastName}`;\n  }\n\n  if (displayName) {\n    return displayName;\n  }\n\n  return null;\n};\n\nauthentication.getNameInitials = fields => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const lastName = fields.lastName;\n  const username = fields.username;\n  const displayName = fields.displayName;\n\n  if (firstName && lastName) {\n    return firstName.charAt(0) + lastName.charAt(0);\n  }\n\n  if (firstName) {\n    return firstName.charAt(0);\n  }\n\n  if (username) {\n    return username.charAt(0);\n  }\n\n  if (lastName) {\n    return lastName.charAt(0);\n  }\n\n  if (displayName) {\n    return displayName.charAt(0);\n  }\n\n  return null;\n};\n\nauthentication.getProfileCompletion = fields => {\n  if (!fields) {\n    return null;\n  }\n\n  fields = [\n    fields.photoURL,\n    fields.firstName,\n    fields.lastName,\n    fields.username,\n    fields.email,\n    fields.email && fields.emailVerified\n  ];\n\n  if (!fields) {\n    return null;\n  }\n\n  let profileCompletion = 0;\n\n  fields.forEach(field => {\n    if (field) {\n      profileCompletion += 100 / fields.length;\n    }\n  });\n\n  return Math.floor(profileCompletion);\n};\n\nauthentication.getSecurityRating = (user, userData) => {\n  if (!user || !user.metadata) {\n    return null;\n  }\n\n  let creationTime = user.metadata.creationTime;\n\n  if (!creationTime) {\n    return null;\n  }\n\n  creationTime = moment(creationTime);\n\n  let securityRating = 0;\n\n  if (userData && userData.lastPasswordChange) {\n    let lastPasswordChange = userData.lastPasswordChange;\n\n    if (lastPasswordChange) {\n      lastPasswordChange = moment(lastPasswordChange.toDate());\n\n      if (creationTime.diff(lastPasswordChange, \"days\") >= 365.242199) {\n        securityRating = 50;\n      } else {\n        securityRating = 100;\n      }\n    }\n  } else {\n    if (moment().diff(creationTime, \"days\") >= 365.242199) {\n      securityRating = 50;\n    } else {\n      securityRating = 100;\n    }\n  }\n\n  return securityRating;\n};\n\nexport default authentication;\n","import camelCase from \"lodash.camelcase\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nimport red from \"@material-ui/core/colors/red\";\nimport pink from \"@material-ui/core/colors/pink\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport lightBlue from \"@material-ui/core/colors/lightBlue\";\nimport cyan from \"@material-ui/core/colors/cyan\";\nimport teal from \"@material-ui/core/colors/teal\";\nimport green from \"@material-ui/core/colors/green\";\nimport lightGreen from \"@material-ui/core/colors/lightGreen\";\nimport lime from \"@material-ui/core/colors/lime\";\nimport yellow from \"@material-ui/core/colors/yellow\";\nimport amber from \"@material-ui/core/colors/amber\";\nimport orange from \"@material-ui/core/colors/orange\";\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\nimport brown from \"@material-ui/core/colors/brown\";\nimport gray from \"@material-ui/core/colors/grey\";\nimport blueGray from \"@material-ui/core/colors/blueGrey\";\n\nimport firebase, { analytics, auth, firestore } from \"../firebase\";\n\nconst colors = {\n  red: {\n    id: \"red\",\n    name: \"Red\",\n    import: red\n  },\n\n  pink: {\n    id: \"pink\",\n    name: \"Pink\",\n    import: pink\n  },\n\n  purple: {\n    id: \"purple\",\n    name: \"Purple\",\n    import: purple\n  },\n\n  deepPurple: {\n    id: \"deep-purple\",\n    name: \"Deep Purple\",\n    import: deepPurple\n  },\n\n  indigo: {\n    id: \"indigo\",\n    name: \"Indigo\",\n    import: indigo\n  },\n\n  blue: {\n    id: \"blue\",\n    name: \"Blue\",\n    import: blue\n  },\n\n  lightBlue: {\n    id: \"light-blue\",\n    name: \"Light Blue\",\n    import: lightBlue\n  },\n\n  cyan: {\n    id: \"cyan\",\n    name: \"Cyan\",\n    import: cyan\n  },\n\n  teal: {\n    id: \"teal\",\n    name: \"Teal\",\n    import: teal\n  },\n\n  green: {\n    id: \"green\",\n    name: \"Green\",\n    import: green\n  },\n\n  lightGreen: {\n    id: \"light-green\",\n    name: \"Light Green\",\n    import: lightGreen\n  },\n\n  lime: {\n    id: \"lime\",\n    name: \"Lime\",\n    import: lime\n  },\n\n  yellow: {\n    id: \"yellow\",\n    name: \"Yellow\",\n    import: yellow\n  },\n\n  amber: {\n    id: \"amber\",\n    name: \"Amber\",\n    import: amber\n  },\n\n  orange: {\n    id: \"orange\",\n    name: \"Orange\",\n    import: orange\n  },\n\n  deepOrange: {\n    id: \"deep-orange\",\n    name: \"Deep Orange\",\n    import: deepOrange\n  },\n\n  brown: {\n    id: \"brown\",\n    name: \"Brown\",\n    import: brown\n  },\n\n  gray: {\n    id: \"gray\",\n    name: \"Gray\",\n    import: gray\n  },\n\n  blueGray: {\n    id: \"blue-gray\",\n    name: \"Blue Gray\",\n    import: blueGray\n  }\n};\n\nconst getColor = colorId => {\n  if (!colorId) {\n    return null;\n  }\n\n  colorId = camelCase(colorId);\n\n  return colors[colorId];\n};\n\nconst defaultPrimaryColor = getColor(process.env.REACT_APP_THEME_PRIMARY_COLOR);\nconst defaultSecondaryColor = getColor(\n  process.env.REACT_APP_THEME_SECONDARY_COLOR\n);\nconst defaultDark = process.env.REACT_APP_THEME_DARK === \"true\";\n\nconst defaultTheme = createMuiTheme({\n  palette: {\n    primary: defaultPrimaryColor.import,\n    secondary: defaultSecondaryColor.import,\n    type: defaultDark ? \"dark\" : \"light\"\n  },\n\n  primaryColor: defaultPrimaryColor,\n  secondaryColor: defaultSecondaryColor,\n  dark: defaultDark\n});\n\nconst appearance = {};\n\nappearance.colors = colors;\n\nappearance.defaultPrimaryColor = defaultPrimaryColor;\nappearance.defaultSecondaryColor = defaultSecondaryColor;\nappearance.defaultDark = defaultDark;\n\nappearance.defaultTheme = defaultTheme;\n\nappearance.isDefaultTheme = theme => {\n  if (!theme) {\n    return false;\n  }\n\n  if (\n    theme.primaryColor.id === defaultPrimaryColor.id &&\n    theme.secondaryColor.id === defaultSecondaryColor.id &&\n    theme.dark === defaultDark\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nappearance.createTheme = theme => {\n  if (!theme) {\n    return null;\n  }\n\n  let primaryColor = theme.primaryColor;\n  let secondaryColor = theme.secondaryColor;\n  let dark = theme.dark;\n\n  if (!primaryColor || !secondaryColor) {\n    return null;\n  }\n\n  primaryColor = getColor(primaryColor);\n  secondaryColor = getColor(secondaryColor);\n\n  if (!primaryColor || !secondaryColor) {\n    return null;\n  }\n\n  theme = createMuiTheme({\n    palette: {\n      primary: primaryColor.import,\n      secondary: secondaryColor.import,\n      type: dark ? \"dark\" : \"light\"\n    },\n\n    primaryColor: primaryColor,\n    secondaryColor: secondaryColor,\n    dark: dark\n  });\n\n  return theme;\n};\n\nappearance.changeTheme = theme => {\n  return new Promise((resolve, reject) => {\n    if (!theme) {\n      reject();\n\n      return;\n    }\n\n    let primaryColor = theme.primaryColor;\n    let secondaryColor = theme.secondaryColor;\n    let dark = theme.dark;\n\n    if (!primaryColor || !secondaryColor) {\n      reject();\n\n      return;\n    }\n\n    primaryColor = getColor(primaryColor);\n    secondaryColor = getColor(secondaryColor);\n\n    if (!primaryColor || !secondaryColor) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        theme: {\n          primaryColor: primaryColor.id,\n          secondaryColor: secondaryColor.id,\n          dark: dark\n        }\n      })\n      .then(value => {\n        analytics.logEvent(\"change_theme\", {\n          theme: theme\n        });\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nappearance.changePrimaryColor = primaryColor => {\n  return new Promise((resolve, reject) => {\n    if (!primaryColor) {\n      reject();\n\n      return;\n    }\n\n    primaryColor = getColor(primaryColor);\n\n    if (!primaryColor) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        \"theme.primaryColor\": primaryColor.id\n      })\n      .then(value => {\n        analytics.logEvent(\"change_primary_color\", {\n          primaryColor: primaryColor.id\n        });\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nappearance.changeSecondaryColor = secondaryColor => {\n  return new Promise((resolve, reject) => {\n    if (!secondaryColor) {\n      reject();\n\n      return;\n    }\n\n    secondaryColor = getColor(secondaryColor);\n\n    if (!secondaryColor) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        \"theme.secondaryColor\": secondaryColor.id\n      })\n      .then(value => {\n        analytics.logEvent(\"change_secondary_color\", {\n          secondaryColor: secondaryColor.id\n        });\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nappearance.changeDark = dark => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        \"theme.dark\": dark\n      })\n      .then(value => {\n        analytics.logEvent(\"change_dark\", {\n          dark: dark\n        });\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nappearance.changeSyncAppearance = syncAppearance => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        \"theme.syncAppearance\": syncAppearance\n      })\n      .then(value => {\n        analytics.logEvent(\"change_sync_appearance\", {\n          syncAppearance: syncAppearance\n        });\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nappearance.resetTheme = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        theme: firebase.firestore.FieldValue.delete()\n      })\n      .then(value => {\n        analytics.logEvent(\"reset_theme\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nexport default appearance;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nclass EmptyState extends Component {\n  render() {\n    // Properties\n    const { type, size, padding, icon, title, description } = this.props;\n\n    let fontSize;\n    let variant;\n\n    if (size === \"small\") {\n      fontSize = \"h3.fontSize\";\n      variant = \"h6\";\n    } else if (size === \"medium\") {\n      fontSize = \"h2.fontSize\";\n      variant = \"h5\";\n    } else if (size === \"big\") {\n      fontSize = \"h1.fontSize\";\n      variant = \"h4\";\n    }\n\n    if (type === \"content\") {\n      return (\n        <Box\n          style={{ transform: \"translate(-50%, -50%)\" }}\n          position=\"absolute\"\n          top=\"50%\"\n          left=\"50%\"\n          textAlign=\"center\"\n        >\n          {icon && (\n            <Box clone color=\"text.secondary\" fontSize={fontSize}>\n              {icon}\n            </Box>\n          )}\n\n          {title && (\n            <Typography color=\"textSecondary\" variant={variant}>\n              {title}\n            </Typography>\n          )}\n\n          {description && (\n            <Typography color=\"textSecondary\" variant=\"body1\">\n              {description}\n            </Typography>\n          )}\n        </Box>\n      );\n    }\n\n    if (type === \"card\") {\n      return (\n        <Box padding={padding} textAlign=\"center\">\n          {icon && (\n            <Box clone color=\"text.secondary\" fontSize={fontSize}>\n              {icon}\n            </Box>\n          )}\n\n          {title && (\n            <Typography color=\"textSecondary\" variant={variant}>\n              {title}\n            </Typography>\n          )}\n\n          {description && (\n            <Typography color=\"textSecondary\" variant=\"body1\">\n              {description}\n            </Typography>\n          )}\n        </Box>\n      );\n    }\n\n    return null;\n  }\n}\n\nEmptyState.defaultProps = {\n  type: \"content\",\n  size: \"medium\",\n  padding: 2\n};\n\nEmptyState.propTypes = {\n  // Properties\n  type: PropTypes.string.isRequired,\n  size: PropTypes.string,\n  padding: PropTypes.number,\n  icon: PropTypes.element,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default EmptyState;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport * as Sentry from \"@sentry/browser\";\n\nimport ErrorIcon from \"@material-ui/icons/Error\";\n\nimport EmptyState from \"../EmptyState\";\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasError: false,\n      eventId: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    Sentry.withScope(scope => {\n      scope.setExtras(errorInfo);\n\n      const eventId = Sentry.captureException(error);\n\n      this.setState({\n        eventId: eventId\n      });\n    });\n  }\n\n  render() {\n    // Properties\n    const { children } = this.props;\n\n    const { hasError } = this.state;\n\n    if (hasError) {\n      return <EmptyState icon={<ErrorIcon />} title=\"Something went wrong\" />;\n    }\n\n    return children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  // Properties\n  children: PropTypes.array.isRequired\n};\n\nexport default ErrorBoundary;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst styles = theme => ({\n  center: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    textAlign: \"center\"\n  }\n});\n\nclass LaunchScreen extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.center}>\n        <CircularProgress />\n      </div>\n    );\n  }\n}\n\nLaunchScreen.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(LaunchScreen);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\n\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport PersonIcon from \"@material-ui/icons/Person\";\n\nimport authentication from \"../../services/authentication\";\n\nconst styles = theme => ({\n  nameInitials: {\n    cursor: \"default\"\n  }\n});\n\nclass UserAvatar extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { context, user, defaultCursor } = this.props;\n\n    if (context === \"standalone\") {\n      if (!user) {\n        return <AccountCircleIcon />;\n      }\n\n      const photoUrl = user.photoURL;\n\n      if (photoUrl) {\n        return <Avatar alt=\"Avatar\" src={photoUrl} />;\n      }\n\n      const nameInitials = authentication.getNameInitials({\n        ...user\n      });\n\n      if (nameInitials) {\n        return (\n          <Avatar alt=\"Avatar\">\n            <span className={defaultCursor && classes.nameInitials}>\n              {nameInitials}\n            </span>\n          </Avatar>\n        );\n      }\n\n      return <AccountCircleIcon />;\n    }\n\n    if (context === \"list\") {\n      if (!user) {\n        return (\n          <ListItemAvatar>\n            <Avatar>\n              <PersonIcon />\n            </Avatar>\n          </ListItemAvatar>\n        );\n      }\n\n      const photoUrl = user.photoURL;\n\n      if (photoUrl) {\n        return (\n          <ListItemAvatar>\n            <Avatar alt=\"Avatar\" src={photoUrl} />\n          </ListItemAvatar>\n        );\n      }\n\n      const nameInitials = authentication.getNameInitials({\n        ...user\n      });\n\n      if (nameInitials) {\n        return (\n          <ListItemAvatar>\n            <Avatar alt=\"Avatar\">\n              <span className={defaultCursor && classes.nameInitials}>\n                {nameInitials}\n              </span>\n            </Avatar>\n          </ListItemAvatar>\n        );\n      }\n\n      return (\n        <ListItemAvatar>\n          <Avatar>\n            <PersonIcon />\n          </Avatar>\n        </ListItemAvatar>\n      );\n    }\n\n    return null;\n  }\n}\n\nUserAvatar.defaultProps = {\n  context: \"standalone\"\n};\n\nUserAvatar.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  context: PropTypes.string,\n  user: PropTypes.object.isRequired,\n  defaultCursor: PropTypes.bool\n};\n\nexport default withStyles(styles)(UserAvatar);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport { Link } from \"react-router-dom\";\n\nimport UserAvatar from \"../UserAvatar\";\n\nclass Bar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menu: {\n        anchorEl: null\n      }\n    };\n  }\n\n  openMenu = event => {\n    const anchorEl = event.currentTarget;\n\n    this.setState({\n      menu: {\n        anchorEl\n      }\n    });\n  };\n\n  closeMenu = () => {\n    this.setState({\n      menu: {\n        anchorEl: null\n      }\n    });\n  };\n\n  render() {\n    // Properties\n    const { performingAction, user, userData, roles } = this.props;\n\n    // Events\n    const {\n      onAboutClick,\n      onSettingsClick,\n      onSignOutClick,\n      onSignUpClick,\n      onSignInClick\n    } = this.props;\n\n    const { menu } = this.state;\n\n    const menuItems = [\n      {\n        name: \"About\",\n        onClick: onAboutClick\n      },\n      {\n        name: \"Profile\",\n        to: user ? `/user/${user.uid}` : null\n      },\n      {\n        name: \"Settings\",\n        onClick: onSettingsClick\n      },\n      {\n        name: \"Sign out\",\n        divide: true,\n        onClick: onSignOutClick\n      }\n    ];\n\n    return (\n      <AppBar color=\"primary\" position=\"static\">\n        <Toolbar>\n          <Box display=\"flex\" flexGrow={1}>\n            <Typography color=\"inherit\" variant=\"h6\">\n              {process.env.REACT_APP_TITLE}\n            </Typography>\n          </Box>\n\n          {user && (\n            <>\n              {roles.includes(\"admin\") && (\n                <Box mr={1}>\n                  <Button\n                    color=\"inherit\"\n                    component={Link}\n                    to=\"/admin\"\n                    variant=\"outlined\"\n                  >\n                    Admin\n                  </Button>\n                </Box>\n              )}\n\n              <IconButton\n                color=\"inherit\"\n                disabled={performingAction}\n                onClick={this.openMenu}\n              >\n                <UserAvatar user={Object.assign(user, userData)} />\n              </IconButton>\n\n              <Menu\n                anchorEl={menu.anchorEl}\n                open={Boolean(menu.anchorEl)}\n                onClose={this.closeMenu}\n              >\n                {menuItems.map((menuItem, index) => {\n                  if (\n                    menuItem.hasOwnProperty(\"condition\") &&\n                    !menuItem.condition\n                  ) {\n                    return null;\n                  }\n\n                  let component = null;\n\n                  if (menuItem.to) {\n                    component = (\n                      <MenuItem\n                        key={index}\n                        component={Link}\n                        to={menuItem.to}\n                        onClick={this.closeMenu}\n                      >\n                        {menuItem.name}\n                      </MenuItem>\n                    );\n                  } else {\n                    component = (\n                      <MenuItem\n                        key={index}\n                        onClick={() => {\n                          this.closeMenu();\n\n                          menuItem.onClick();\n                        }}\n                      >\n                        {menuItem.name}\n                      </MenuItem>\n                    );\n                  }\n\n                  if (menuItem.divide) {\n                    return (\n                      <span key={index}>\n                        <Divider />\n\n                        {component}\n                      </span>\n                    );\n                  }\n\n                  return component;\n                })}\n              </Menu>\n            </>\n          )}\n\n          {!user && (\n            <ButtonGroup\n              color=\"inherit\"\n              disabled={performingAction}\n              variant=\"outlined\"\n            >\n              <Button onClick={onSignUpClick}>Sign up</Button>\n              <Button onClick={onSignInClick}>Sign in</Button>\n            </ButtonGroup>\n          )}\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nBar.defaultProps = {\n  performingAction: false\n};\n\nBar.propTypes = {\n  // Properties\n  performingAction: PropTypes.bool.isRequired,\n  user: PropTypes.object,\n  userData: PropTypes.object,\n\n  // Events\n  onAboutClick: PropTypes.func.isRequired,\n  onSettingsClick: PropTypes.func.isRequired,\n  onSignOutClick: PropTypes.func.isRequired\n};\n\nexport default Bar;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { withRouter } from \"react-router-dom\";\n\nimport { auth } from \"../../firebase\";\n\nimport HomeIcon from \"@material-ui/icons/Home\";\n\nimport authentication from \"../../services/authentication\";\n\nimport EmptyState from \"../EmptyState\";\n\nclass HomeContent extends Component {\n  signInWithEmailLink = () => {\n    const { user } = this.props;\n\n    if (user) {\n      return;\n    }\n\n    const emailLink = window.location.href;\n\n    if (!emailLink) {\n      return;\n    }\n\n    if (auth.isSignInWithEmailLink(emailLink)) {\n      let emailAddress = localStorage.getItem(\"emailAddress\");\n\n      if (!emailAddress) {\n        this.props.history.push(\"/\");\n\n        return;\n      }\n\n      authentication\n        .signInWithEmailLink(emailAddress, emailLink)\n        .then(value => {\n          const user = value.user;\n          const displayName = user.displayName;\n          const emailAddress = user.email;\n\n          this.props.openSnackbar(\n            `Signed in as ${displayName || emailAddress}`\n          );\n        })\n        .catch(reason => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            case \"auth/expired-action-code\":\n            case \"auth/invalid-email\":\n            case \"auth/user-disabled\":\n              this.props.openSnackbar(message);\n              break;\n\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        })\n        .finally(() => {\n          this.props.history.push(\"/\");\n        });\n    }\n  };\n\n  render() {\n    // Properties\n    const { user } = this.props;\n\n    if (user) {\n      return <EmptyState icon={<HomeIcon />} title=\"Home\" />;\n    }\n\n    return (\n      <EmptyState\n        title={process.env.REACT_APP_TITLE}\n        description={process.env.REACT_APP_DESCRIPTION}\n      />\n    );\n  }\n\n  componentDidMount() {\n    this.signInWithEmailLink();\n  }\n}\n\nHomeContent.propTypes = {\n  // Properties\n  user: PropTypes.object\n};\n\nexport default withRouter(HomeContent);\n","import React, { Component } from \"react\";\n\nimport EmptyState from \"../EmptyState\";\n\nclass AdminContent extends Component {\n  render() {\n    return <EmptyState title=\"Admin\" />;\n  }\n}\n\nexport default AdminContent;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles({\n  center: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    textAlign: \"center\"\n  }\n});\n\nfunction Loader() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.center}>\n      <CircularProgress />\n    </div>\n  );\n}\n\nexport default Loader;\n","import React from \"react\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\n\nimport PropTypes from \"prop-types\";\n\nimport UserAvatar from \"../UserAvatar\";\n\nfunction UserCard(props) {\n  const user = props.user;\n\n  return (\n    <Card>\n      <CardHeader\n        avatar={<UserAvatar user={user} />}\n        title={`${user.firstName} ${user.lastName}`}\n        subheader={user.username}\n      />\n    </Card>\n  );\n}\n\nUserCard.propTypes = {\n  user: PropTypes.object.isRequired\n};\n\nexport default UserCard;\n","import React, { useState, useEffect } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\n\nimport { firestore } from \"../../firebase\";\n\nimport EmptyState from \"../EmptyState\";\nimport Loader from \"../Loader\";\nimport UserCard from \"../UserCard\";\n\nconst useStyles = makeStyles({\n  grid: {\n    margin: 0,\n    width: \"100%\"\n  }\n});\n\nfunction UserContent() {\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n  const { userId } = useParams();\n  const classes = useStyles();\n\n  useEffect(() => {\n    return firestore\n      .collection(\"users\")\n      .doc(userId)\n      .onSnapshot(\n        snapshot => {\n          setLoading(false);\n          setUser(snapshot.data());\n        },\n        error => {\n          setLoading(false);\n          setError(error);\n        }\n      );\n  }, [userId]);\n\n  if (error) {\n    return (\n      <EmptyState\n        icon={<ErrorIcon />}\n        title=\"Something went wrong\"\n        description=\"There was an error while trying to fetch the requested user\"\n      />\n    );\n  }\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  if (!user) {\n    return (\n      <EmptyState\n        icon={<PersonOutlineIcon />}\n        title=\"User not found\"\n        description=\"The requested user was not found\"\n      />\n    );\n  }\n\n  return (\n    <Grid className={classes.grid} container justify=\"center\" spacing={5}>\n      <Grid item xs={6}>\n        <UserCard user={user} />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default UserContent;\n","import React, { Component } from \"react\";\n\nimport FindIcon from \"@material-ui/icons/FindInPage\";\n\nimport EmptyState from \"../EmptyState\";\n\nclass NotFoundContent extends Component {\n  render() {\n    return (\n      <EmptyState\n        icon={<FindIcon />}\n        title=\"Content not found\"\n        description=\"The requested URL was not found on this server\"\n      />\n    );\n  }\n}\n\nexport default NotFoundContent;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { BrowserRouter, Switch, Redirect, Route } from \"react-router-dom\";\n\nimport HomeContent from \"../HomeContent\";\nimport AdminContent from \"../AdminContent\";\nimport UserContent from \"../UserContent\";\nimport NotFoundContent from \"../NotFoundContent\";\n\nclass Router extends Component {\n  render() {\n    // Properties\n    const { user, roles, bar } = this.props;\n\n    // Functions\n    const { openSnackbar } = this.props;\n\n    return (\n      <BrowserRouter basename={process.env.REACT_APP_BASENAME}>\n        {bar}\n\n        <Switch>\n          <Route path=\"/\" exact>\n            <HomeContent user={user} openSnackbar={openSnackbar} />\n          </Route>\n\n          <Route path=\"/admin\">\n            {user && roles.includes(\"admin\") ? (\n              <AdminContent />\n            ) : (\n              <Redirect to=\"/\" />\n            )}\n          </Route>\n\n          <Route path=\"/user/:userId\">\n            {user ? <UserContent /> : <Redirect to=\"/\" />}\n          </Route>\n\n          <Route>\n            <NotFoundContent />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nRouter.propTypes = {\n  // Properties\n  user: PropTypes.object,\n  roles: PropTypes.array.isRequired,\n  bar: PropTypes.element,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default Router;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst styles = theme => ({\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  }\n});\n\nclass AboutDialog extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const { user } = this.props;\n\n    return (\n      <Dialog {...dialogProps}>\n        <DialogTitle disableTypography>\n          <Typography variant=\"h6\">About</Typography>\n\n          <Tooltip title=\"Close\">\n            <IconButton\n              className={classes.closeButton}\n              onClick={dialogProps.onClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n        </DialogTitle>\n\n        <DialogContent>\n          <List disablePadding>\n            <ListItem>\n              <ListItemText\n                primary=\"Version\"\n                secondary={process.env.REACT_APP_VERSION}\n              />\n            </ListItem>\n\n            {user && (\n              <ListItem>\n                <ListItemText primary=\"UID\" secondary={user.uid} />\n              </ListItem>\n            )}\n          </List>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\n\nAboutDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  user: PropTypes.object\n};\n\nexport default withStyles(styles)(AboutDialog);\n","import React from \"react\";\n\nimport AppleIcon from \"mdi-material-ui/Apple\";\nimport FacebookBoxIcon from \"mdi-material-ui/FacebookBox\";\nimport GitHubCircleIcon from \"mdi-material-ui/GithubCircle\";\nimport GoogleIcon from \"mdi-material-ui/Google\";\nimport MicrosoftIcon from \"mdi-material-ui/Microsoft\";\nimport TwitterIcon from \"mdi-material-ui/Twitter\";\nimport YahooIcon from \"mdi-material-ui/Yahoo\";\n\nconst authProviders = [\n  {\n    providerId: \"apple.com\",\n    color: \"#000000\",\n    icon: <AppleIcon />,\n    name: \"Apple\"\n  },\n  {\n    providerId: \"facebook.com\",\n    color: \"#3c5a99\",\n    icon: <FacebookBoxIcon />,\n    name: \"Facebook\"\n  },\n  {\n    providerId: \"github.com\",\n    color: \"#24292e\",\n    icon: <GitHubCircleIcon />,\n    name: \"GitHub\"\n  },\n  {\n    providerId: \"google.com\",\n    color: \"#4285f4\",\n    icon: <GoogleIcon />,\n    name: \"Google\"\n  },\n  {\n    providerId: \"microsoft.com\",\n    color: \"#f65314\",\n    icon: <MicrosoftIcon />,\n    name: \"Microsoft\"\n  },\n  {\n    providerId: \"twitter.com\",\n    color: \"#1da1f2\",\n    icon: <TwitterIcon />,\n    name: \"Twitter\"\n  },\n  {\n    providerId: \"yahoo.com\",\n    color: \"#410093\",\n    icon: <YahooIcon />,\n    name: \"Yahoo\"\n  }\n];\n\nexport default authProviders;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Box from \"@material-ui/core/Box\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\n\nimport authProviders from \"../../authProviders\";\n\nclass AuthProviderList extends Component {\n  render() {\n    // Properties\n    const { gutterBottom, performingAction } = this.props;\n\n    // Events\n    const { onAuthProviderClick } = this.props;\n\n    return (\n      <Box mb={gutterBottom ? 3 : 0}>\n        <ButtonGroup\n          disabled={performingAction}\n          fullWidth\n          orientation=\"vertical\"\n          variant=\"outlined\"\n        >\n          {authProviders.map(authProvider => {\n            const AuthProviderButton = withStyles({\n              root: {\n                color: authProvider.color\n              }\n            })(Button);\n\n            return (\n              <AuthProviderButton\n                key={authProvider.providerId}\n                startIcon={authProvider.icon}\n                onClick={() => onAuthProviderClick(authProvider.providerId)}\n              >\n                {authProvider.name}\n              </AuthProviderButton>\n            );\n          })}\n        </ButtonGroup>\n      </Box>\n    );\n  }\n}\n\nAuthProviderList.defaultProps = {\n  gutterBottom: false,\n  performingAction: false\n};\n\nAuthProviderList.propTypes = {\n  // Properties\n  gutterBottom: PropTypes.bool,\n  performingAction: PropTypes.bool,\n\n  // Events\n  onAuthProviderClick: PropTypes.func.isRequired\n};\n\nexport default AuthProviderList;\n","const constraints = {\n  firstName: {\n    presence: {\n      allowEmpty: false\n    },\n\n    type: \"string\"\n  },\n\n  lastName: {\n    presence: {\n      allowEmpty: false\n    },\n\n    type: \"string\"\n  },\n\n  username: {\n    length: {\n      minimum: 2,\n      maximum: 20\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: \"string\"\n  },\n\n  emailAddress: {\n    email: {\n      message: \"^E-mail address is invalid\"\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: \"string\"\n  },\n\n  emailAddressConfirmation: {\n    email: {\n      message: \"^E-mail address confirmation is invalid\"\n    },\n\n    equality: {\n      attribute: \"emailAddress\",\n      message: \"^E-mail address confirmation is not equal to e-mail address\"\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: \"string\"\n  },\n\n  password: {\n    length: {\n      minimum: 6\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: \"string\"\n  },\n\n  passwordConfirmation: {\n    equality: \"password\",\n\n    length: {\n      minimum: 6\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: \"string\"\n  }\n};\n\nexport default constraints;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport validate from \"validate.js\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport AuthProviderList from \"../AuthProviderList\";\n\nimport constraints from \"../../constraints\";\nimport authentication from \"../../services/authentication\";\n\nconst styles = theme => ({\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  },\n\n  icon: {\n    marginRight: theme.spacing(0.5)\n  },\n\n  divider: {\n    margin: \"auto\"\n  },\n\n  grid: {\n    marginBottom: theme.spacing(2)\n  }\n});\n\nconst initialState = {\n  performingAction: false,\n  emailAddress: \"\",\n  emailAddressConfirmation: \"\",\n  password: \"\",\n  passwordConfirmation: \"\",\n  errors: null\n};\n\nclass SignUpDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signUp = () => {\n    const {\n      emailAddress,\n      emailAddressConfirmation,\n      password,\n      passwordConfirmation\n    } = this.state;\n\n    const errors = validate(\n      {\n        emailAddress: emailAddress,\n        emailAddressConfirmation: emailAddressConfirmation,\n        password: password,\n        passwordConfirmation: passwordConfirmation\n      },\n      {\n        emailAddress: constraints.emailAddress,\n        emailAddressConfirmation: constraints.emailAddressConfirmation,\n        password: constraints.password,\n        passwordConfirmation: constraints.passwordConfirmation\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n    } else {\n      this.setState(\n        {\n          performingAction: true,\n          errors: null\n        },\n        () => {\n          authentication\n            .signUpWithEmailAddressAndPassword(emailAddress, password)\n            .then(value => {\n              this.props.dialogProps.onClose();\n            })\n            .catch(reason => {\n              const code = reason.code;\n              const message = reason.message;\n\n              switch (code) {\n                case \"auth/email-already-in-use\":\n                case \"auth/invalid-email\":\n                case \"auth/operation-not-allowed\":\n                case \"auth/weak-password\":\n                  this.props.openSnackbar(message);\n                  return;\n\n                default:\n                  this.props.openSnackbar(message);\n                  return;\n              }\n            })\n            .finally(() => {\n              this.setState({\n                performingAction: false\n              });\n            });\n        }\n      );\n    }\n  };\n\n  signInWithAuthProvider = providerId => {\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        authentication\n          .signInWithAuthProvider(providerId)\n          .then(user => {\n            this.props.dialogProps.onClose(() => {\n              const displayName = user.displayName;\n              const emailAddress = user.email;\n\n              this.props.openSnackbar(\n                `Signed in as ${displayName || emailAddress}`\n              );\n            });\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              case \"auth/account-exists-with-different-credential\":\n              case \"auth/auth-domain-config-required\":\n              case \"auth/cancelled-popup-request\":\n              case \"auth/operation-not-allowed\":\n              case \"auth/operation-not-supported-in-this-environment\":\n              case \"auth/popup-blocked\":\n              case \"auth/popup-closed-by-user\":\n              case \"auth/unauthorized-domain\":\n                this.props.openSnackbar(message);\n                return;\n\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  handleKeyPress = event => {\n    const {\n      emailAddress,\n      emailAddressConfirmation,\n      password,\n      passwordConfirmation\n    } = this.state;\n\n    if (\n      !emailAddress ||\n      !emailAddressConfirmation ||\n      !password ||\n      !passwordConfirmation\n    ) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === \"Enter\") {\n      this.signUp();\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleEmailAddressChange = event => {\n    const emailAddress = event.target.value;\n\n    this.setState({\n      emailAddress: emailAddress\n    });\n  };\n\n  handleEmailAddressConfirmationChange = event => {\n    const emailAddressConfirmation = event.target.value;\n\n    this.setState({\n      emailAddressConfirmation: emailAddressConfirmation\n    });\n  };\n\n  handlePasswordChange = event => {\n    const password = event.target.value;\n\n    this.setState({\n      password: password\n    });\n  };\n\n  handlePasswordConfirmationChange = event => {\n    const passwordConfirmation = event.target.value;\n\n    this.setState({\n      passwordConfirmation: passwordConfirmation\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    const {\n      performingAction,\n      emailAddress,\n      emailAddressConfirmation,\n      password,\n      passwordConfirmation,\n      errors\n    } = this.state;\n\n    return (\n      <Dialog\n        fullWidth\n        maxWidth=\"sm\"\n        disableBackdropClick={performingAction}\n        disableEscapeKeyDown={performingAction}\n        {...dialogProps}\n        onKeyPress={this.handleKeyPress}\n        onExited={this.handleExited}\n      >\n        <DialogTitle disableTypography>\n          <Typography variant=\"h6\">Sign up for an account</Typography>\n\n          <Tooltip title=\"Close\">\n            <IconButton\n              className={classes.closeButton}\n              disabled={performingAction}\n              onClick={dialogProps.onClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n        </DialogTitle>\n\n        <Hidden xsDown>\n          <DialogContent>\n            <Grid container direction=\"row\">\n              <Grid item xs={4}>\n                <AuthProviderList\n                  performingAction={performingAction}\n                  onAuthProviderClick={this.signInWithAuthProvider}\n                />\n              </Grid>\n\n              <Grid item xs={1}>\n                <Divider className={classes.divider} orientation=\"vertical\" />\n              </Grid>\n\n              <Grid item xs={7}>\n                <Grid container direction=\"column\" spacing={2}>\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"email\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.emailAddress)}\n                      fullWidth\n                      helperText={\n                        errors && errors.emailAddress\n                          ? errors.emailAddress[0]\n                          : \"\"\n                      }\n                      label=\"E-mail address\"\n                      placeholder=\"john@doe.com\"\n                      required\n                      type=\"email\"\n                      value={emailAddress}\n                      variant=\"outlined\"\n                      onChange={this.handleEmailAddressChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"email\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.emailAddressConfirmation)}\n                      fullWidth\n                      helperText={\n                        errors && errors.emailAddressConfirmation\n                          ? errors.emailAddressConfirmation[0]\n                          : \"\"\n                      }\n                      label=\"E-mail address confirmation\"\n                      placeholder=\"john@doe.com\"\n                      required\n                      type=\"email\"\n                      value={emailAddressConfirmation}\n                      variant=\"outlined\"\n                      onChange={this.handleEmailAddressConfirmationChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"new-password\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.password)}\n                      fullWidth\n                      helperText={\n                        errors && errors.password ? errors.password[0] : \"\"\n                      }\n                      label=\"Password\"\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                      required\n                      type=\"password\"\n                      value={password}\n                      variant=\"outlined\"\n                      onChange={this.handlePasswordChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"password\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.passwordConfirmation)}\n                      fullWidth\n                      helperText={\n                        errors && errors.passwordConfirmation\n                          ? errors.passwordConfirmation[0]\n                          : \"\"\n                      }\n                      label=\"Password confirmation\"\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                      required\n                      type=\"password\"\n                      value={passwordConfirmation}\n                      variant=\"outlined\"\n                      onChange={this.handlePasswordConfirmationChange}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </DialogContent>\n        </Hidden>\n\n        <Hidden smUp>\n          <DialogContent>\n            <AuthProviderList\n              gutterBottom\n              performingAction={performingAction}\n              onAuthProviderClick={this.signInWithAuthProvider}\n            />\n\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"email\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.emailAddress)}\n                  fullWidth\n                  helperText={\n                    errors && errors.emailAddress ? errors.emailAddress[0] : \"\"\n                  }\n                  label=\"E-mail address\"\n                  placeholder=\"john@doe.com\"\n                  required\n                  type=\"email\"\n                  value={emailAddress}\n                  variant=\"outlined\"\n                  onChange={this.handleEmailAddressChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"email\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.emailAddressConfirmation)}\n                  fullWidth\n                  helperText={\n                    errors && errors.emailAddressConfirmation\n                      ? errors.emailAddressConfirmation[0]\n                      : \"\"\n                  }\n                  label=\"E-mail address confirmation\"\n                  placeholder=\"john@doe.com\"\n                  required\n                  type=\"email\"\n                  value={emailAddressConfirmation}\n                  variant=\"outlined\"\n                  onChange={this.handleEmailAddressConfirmationChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"new-password\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.password)}\n                  fullWidth\n                  helperText={\n                    errors && errors.password ? errors.password[0] : \"\"\n                  }\n                  label=\"Password\"\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                  required\n                  type=\"password\"\n                  value={password}\n                  variant=\"outlined\"\n                  onChange={this.handlePasswordChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"password\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.passwordConfirmation)}\n                  fullWidth\n                  helperText={\n                    errors && errors.passwordConfirmation\n                      ? errors.passwordConfirmation[0]\n                      : \"\"\n                  }\n                  label=\"Password confirmation\"\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                  required\n                  type=\"password\"\n                  value={passwordConfirmation}\n                  variant=\"outlined\"\n                  onChange={this.handlePasswordConfirmationChange}\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n        </Hidden>\n\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            disabled={\n              !emailAddress ||\n              !emailAddressConfirmation ||\n              !password ||\n              !passwordConfirmation ||\n              performingAction\n            }\n            variant=\"contained\"\n            onClick={this.signUp}\n          >\n            Sign up\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignUpDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SignUpDialog);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport validate from \"validate.js\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport AuthProviderList from \"../AuthProviderList\";\n\nimport constraints from \"../../constraints\";\nimport authentication from \"../../services/authentication\";\n\nconst styles = theme => ({\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  },\n\n  icon: {\n    marginRight: theme.spacing(0.5)\n  },\n\n  divider: {\n    margin: \"auto\"\n  },\n\n  grid: {\n    marginBottom: theme.spacing(2)\n  }\n});\n\nconst initialState = {\n  performingAction: false,\n  emailAddress: \"\",\n  password: \"\",\n  errors: null\n};\n\nclass SignInDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  getSignInButton = () => {\n    const { emailAddress, password, performingAction } = this.state;\n\n    if (emailAddress && !password) {\n      return (\n        <Button\n          color=\"primary\"\n          disabled={!emailAddress || performingAction}\n          variant=\"contained\"\n          onClick={() => this.sendSignInLinkToEmail()}\n        >\n          Send sign-in link\n        </Button>\n      );\n    }\n\n    return (\n      <Button\n        color=\"primary\"\n        disabled={!emailAddress || performingAction}\n        variant=\"contained\"\n        onClick={() => this.signIn()}\n      >\n        Sign in\n      </Button>\n    );\n  };\n\n  resetPassword = () => {\n    const { emailAddress } = this.state;\n\n    const errors = validate(\n      {\n        emailAddress: emailAddress\n      },\n      {\n        emailAddress: constraints.emailAddress\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n    } else {\n      this.setState(\n        {\n          errors: null\n        },\n        () => {\n          this.setState(\n            {\n              performingAction: true\n            },\n            () => {\n              authentication\n                .resetPassword(emailAddress)\n                .then(value => {\n                  this.props.openSnackbar(\n                    `Sent password reset e-mail to ${emailAddress}`\n                  );\n                })\n                .catch(reason => {\n                  const code = reason.code;\n                  const message = reason.message;\n\n                  switch (code) {\n                    case \"auth/invalid-email\":\n                    case \"auth/missing-android-pkg-name\":\n                    case \"auth/missing-continue-uri\":\n                    case \"auth/missing-ios-bundle-id\":\n                    case \"auth/invalid-continue-uri\":\n                    case \"auth/unauthorized-continue-uri\":\n                    case \"auth/user-not-found\":\n                      this.props.openSnackbar(message);\n                      return;\n\n                    default:\n                      this.props.openSnackbar(message);\n                      return;\n                  }\n                })\n                .finally(() => {\n                  this.setState({\n                    performingAction: false\n                  });\n                });\n            }\n          );\n        }\n      );\n    }\n  };\n\n  signIn = () => {\n    const { emailAddress, password } = this.state;\n\n    const errors = validate(\n      {\n        emailAddress: emailAddress,\n        password: password\n      },\n      {\n        emailAddress: constraints.emailAddress,\n        password: constraints.password\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n    } else {\n      this.setState(\n        {\n          performingAction: true,\n          errors: null\n        },\n        () => {\n          authentication\n            .signIn(emailAddress, password)\n            .then(user => {\n              this.props.dialogProps.onClose(() => {\n                const displayName = user.displayName;\n                const emailAddress = user.email;\n\n                this.props.openSnackbar(\n                  `Signed in as ${displayName || emailAddress}`\n                );\n              });\n            })\n            .catch(reason => {\n              const code = reason.code;\n              const message = reason.message;\n\n              switch (code) {\n                case \"auth/invalid-email\":\n                case \"auth/user-disabled\":\n                case \"auth/user-not-found\":\n                case \"auth/wrong-password\":\n                  this.props.openSnackbar(message);\n                  return;\n\n                default:\n                  this.props.openSnackbar(message);\n                  return;\n              }\n            })\n            .finally(() => {\n              this.setState({\n                performingAction: false\n              });\n            });\n        }\n      );\n    }\n  };\n\n  sendSignInLinkToEmail = () => {\n    const { emailAddress } = this.state;\n\n    const errors = validate(\n      {\n        emailAddress: emailAddress\n      },\n      {\n        emailAddress: constraints.emailAddress\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState(\n      {\n        performingAction: true,\n        errors: null\n      },\n      () => {\n        authentication\n          .sendSignInLinkToEmail(emailAddress)\n          .then(() => {\n            this.props.dialogProps.onClose(() => {\n              this.props.openSnackbar(`Sent sign-in e-mail to ${emailAddress}`);\n            });\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              case \"auth/argument-error\":\n              case \"auth/invalid-email\":\n              case \"auth/missing-android-pkg-name\":\n              case \"auth/missing-continue-uri\":\n              case \"auth/missing-ios-bundle-id\":\n              case \"auth/invalid-continue-uri\":\n              case \"auth/unauthorized-continue-uri\":\n                this.props.openSnackbar(message);\n                return;\n\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  signInWithAuthProvider = providerId => {\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        authentication\n          .signInWithAuthProvider(providerId)\n          .then(user => {\n            this.props.dialogProps.onClose(() => {\n              const displayName = user.displayName;\n              const emailAddress = user.email;\n\n              this.props.openSnackbar(\n                `Signed in as ${displayName || emailAddress}`\n              );\n            });\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              case \"auth/account-exists-with-different-credential\":\n              case \"auth/auth-domain-config-required\":\n              case \"auth/cancelled-popup-request\":\n              case \"auth/operation-not-allowed\":\n              case \"auth/operation-not-supported-in-this-environment\":\n              case \"auth/popup-blocked\":\n              case \"auth/popup-closed-by-user\":\n              case \"auth/unauthorized-domain\":\n                this.props.openSnackbar(message);\n                return;\n\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  handleKeyPress = event => {\n    const { emailAddress, password } = this.state;\n\n    if (!emailAddress && !password) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === \"Enter\") {\n      if (emailAddress && !password) {\n        this.sendSignInLinkToEmail();\n      } else {\n        this.signIn();\n      }\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleEmailAddressChange = event => {\n    const emailAddress = event.target.value;\n\n    this.setState({\n      emailAddress: emailAddress\n    });\n  };\n\n  handlePasswordChange = event => {\n    const password = event.target.value;\n\n    this.setState({\n      password: password\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    const { performingAction, emailAddress, password, errors } = this.state;\n\n    return (\n      <Dialog\n        fullWidth\n        maxWidth=\"sm\"\n        disableBackdropClick={performingAction}\n        disableEscapeKeyDown={performingAction}\n        {...dialogProps}\n        onKeyPress={this.handleKeyPress}\n        onExited={this.handleExited}\n      >\n        <DialogTitle disableTypography>\n          <Typography variant=\"h6\">Sign in to your account</Typography>\n\n          <Tooltip title=\"Close\">\n            <IconButton\n              className={classes.closeButton}\n              disabled={performingAction}\n              onClick={dialogProps.onClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n        </DialogTitle>\n\n        <DialogContent>\n          <Hidden xsDown>\n            <Grid container direction=\"row\">\n              <Grid item xs={4}>\n                <AuthProviderList\n                  performingAction={performingAction}\n                  onAuthProviderClick={this.signInWithAuthProvider}\n                />\n              </Grid>\n\n              <Grid item xs={1}>\n                <Divider className={classes.divider} orientation=\"vertical\" />\n              </Grid>\n\n              <Grid item xs={7}>\n                <Grid container direction=\"column\" spacing={2}>\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"email\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.emailAddress)}\n                      fullWidth\n                      helperText={\n                        errors && errors.emailAddress\n                          ? errors.emailAddress[0]\n                          : \"\"\n                      }\n                      label=\"E-mail address\"\n                      placeholder=\"john@doe.com\"\n                      required\n                      type=\"email\"\n                      value={emailAddress}\n                      variant=\"outlined\"\n                      onChange={this.handleEmailAddressChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"current-password\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.password)}\n                      fullWidth\n                      helperText={\n                        errors && errors.password ? errors.password[0] : \"\"\n                      }\n                      label=\"Password\"\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                      required\n                      type=\"password\"\n                      value={password}\n                      variant=\"outlined\"\n                      onChange={this.handlePasswordChange}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Hidden>\n\n          <Hidden smUp>\n            <AuthProviderList\n              gutterBottom\n              performingAction={performingAction}\n              onAuthProviderClick={this.signInWithAuthProvider}\n            />\n\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"email\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.emailAddress)}\n                  fullWidth\n                  helperText={\n                    errors && errors.emailAddress ? errors.emailAddress[0] : \"\"\n                  }\n                  label=\"E-mail address\"\n                  placeholder=\"john@doe.com\"\n                  required\n                  type=\"email\"\n                  value={emailAddress}\n                  variant=\"outlined\"\n                  onChange={this.handleEmailAddressChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"current-password\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.password)}\n                  fullWidth\n                  helperText={\n                    errors && errors.password ? errors.password[0] : \"\"\n                  }\n                  label=\"Password\"\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                  required\n                  type=\"password\"\n                  value={password}\n                  variant=\"outlined\"\n                  onChange={this.handlePasswordChange}\n                />\n              </Grid>\n            </Grid>\n          </Hidden>\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            disabled={!emailAddress || performingAction}\n            variant=\"outlined\"\n            onClick={this.resetPassword}\n          >\n            Reset password\n          </Button>\n\n          {this.getSignInButton()}\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignInDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SignInDialog);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport validate from \"validate.js\";\nimport moment from \"moment\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Fade from \"@material-ui/core/Fade\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Button from \"@material-ui/core/Button\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\n\nimport Hidden from \"@material-ui/core/Hidden\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport PhotoIcon from \"@material-ui/icons/Photo\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nimport constraints from \"../../constraints\";\nimport authentication from \"../../services/authentication\";\n\nconst styles = theme => ({\n  dialogContent: {\n    paddingTop: theme.spacing(2)\n  },\n\n  badge: {\n    top: theme.spacing(2),\n    right: -theme.spacing(2)\n  },\n\n  loadingBadge: {\n    top: \"50%\",\n    right: \"50%\"\n  },\n\n  avatar: {\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n\n    width: theme.spacing(14),\n    height: theme.spacing(14)\n  },\n\n  nameInitials: {\n    cursor: \"default\"\n  },\n\n  personIcon: {\n    fontSize: theme.spacing(7)\n  },\n\n  small: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n\n    minHeight: \"initial\"\n  }\n});\n\nconst initialState = {\n  profileCompletion: 0,\n  securityRating: 0,\n  showingField: \"\",\n  avatar: null,\n  avatarUrl: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  username: \"\",\n  emailAddress: \"\",\n  performingAction: false,\n  loadingAvatar: false,\n  sentVerificationEmail: false,\n  errors: null\n};\n\nclass AccountTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  getNameInitialsOrIcon = () => {\n    const { user } = this.props;\n\n    if (!user) {\n      return null;\n    }\n\n    const { classes, userData } = this.props;\n\n    if (!userData) {\n      return <PersonIcon className={classes.personIcon} />;\n    }\n\n    const nameInitials = authentication.getNameInitials({\n      ...user,\n      ...userData\n    });\n\n    if (nameInitials) {\n      return (\n        <Typography className={classes.nameInitials} variant=\"h2\">\n          {nameInitials}\n        </Typography>\n      );\n    }\n\n    return <PersonIcon className={classes.personIcon} />;\n  };\n\n  uploadAvatar = () => {\n    const { avatar } = this.state;\n\n    if (!avatar) {\n      return;\n    }\n\n    this.setState(\n      {\n        performingAction: true,\n        loadingAvatar: true\n      },\n      () => {\n        authentication\n          .changeAvatar(avatar)\n          .then(value => {\n            const { user, userData } = this.props;\n\n            this.setState({\n              profileCompletion: authentication.getProfileCompletion({\n                ...user,\n                ...userData\n              })\n            });\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false,\n              loadingAvatar: false,\n              avatar: null,\n              avatarUrl: \"\"\n            });\n          });\n      }\n    );\n  };\n\n  removeAvatar = () => {\n    const { user } = this.props;\n\n    const { avatar, avatarUrl } = this.state;\n\n    if (!user.photoURL && !avatar && !avatarUrl) {\n      return;\n    }\n\n    if (\n      (!user.photoURL && avatar && avatarUrl) ||\n      (user.photoURL && avatar && avatarUrl)\n    ) {\n      URL.revokeObjectURL(avatarUrl);\n\n      this.setState({\n        avatar: null,\n        avatarUrl: \"\"\n      });\n    } else if (user.photoURL && !avatar && !avatarUrl) {\n      this.setState(\n        {\n          performingAction: true,\n          loadingAvatar: true\n        },\n        () => {\n          authentication\n            .removeAvatar()\n            .then(value => {\n              const { user, userData } = this.props;\n\n              this.setState({\n                profileCompletion: authentication.getProfileCompletion({\n                  ...user,\n                  ...userData\n                })\n              });\n            })\n            .catch(reason => {\n              const code = reason.code;\n              const message = reason.message;\n\n              switch (code) {\n                default:\n                  this.props.openSnackbar(message);\n                  return;\n              }\n            })\n            .finally(() => {\n              this.setState({\n                performingAction: false,\n                loadingAvatar: false\n              });\n            });\n        }\n      );\n    }\n  };\n\n  showField = fieldId => {\n    if (!fieldId) {\n      return;\n    }\n\n    this.setState({\n      showingField: fieldId\n    });\n  };\n\n  hideFields = callback => {\n    this.setState(\n      {\n        showingField: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        username: \"\",\n        emailAddress: \"\",\n        errors: null\n      },\n      () => {\n        if (callback && typeof callback === \"function\") {\n          callback();\n        }\n      }\n    );\n  };\n\n  changeFirstName = () => {\n    const { firstName } = this.state;\n\n    const errors = validate(\n      {\n        firstName: firstName\n      },\n      {\n        firstName: constraints.firstName\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState(\n      {\n        errors: null\n      },\n      () => {\n        const { userData } = this.props;\n\n        if (firstName === userData.firstName) {\n          return;\n        }\n\n        this.setState(\n          {\n            performingAction: true\n          },\n          () => {\n            authentication\n              .changeFirstName(firstName)\n              .then(() => {\n                const { user, userData } = this.props;\n\n                this.setState(\n                  {\n                    profileCompletion: authentication.getProfileCompletion({\n                      ...user,\n                      ...userData\n                    })\n                  },\n                  () => {\n                    this.hideFields();\n                  }\n                );\n              })\n              .catch(reason => {\n                const code = reason.code;\n                const message = reason.message;\n\n                switch (code) {\n                  default:\n                    this.props.openSnackbar(message);\n                    return;\n                }\n              })\n              .finally(() => {\n                this.setState({\n                  performingAction: false\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  changeLastName = () => {\n    const { lastName } = this.state;\n\n    const errors = validate(\n      {\n        lastName: lastName\n      },\n      {\n        lastName: constraints.lastName\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState(\n      {\n        errors: null\n      },\n      () => {\n        const { userData } = this.props;\n\n        if (lastName === userData.lastName) {\n          return;\n        }\n\n        this.setState(\n          {\n            performingAction: true\n          },\n          () => {\n            authentication\n              .changeLastName(lastName)\n              .then(() => {\n                const { user, userData } = this.props;\n\n                this.setState(\n                  {\n                    profileCompletion: authentication.getProfileCompletion({\n                      ...user,\n                      ...userData\n                    })\n                  },\n                  () => {\n                    this.hideFields();\n                  }\n                );\n              })\n              .catch(reason => {\n                const code = reason.code;\n                const message = reason.message;\n\n                switch (code) {\n                  default:\n                    this.props.openSnackbar(message);\n                    return;\n                }\n              })\n              .finally(() => {\n                this.setState({\n                  performingAction: false\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  changeUsername = () => {\n    const { username } = this.state;\n\n    const errors = validate(\n      {\n        username: username\n      },\n      {\n        username: constraints.username\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState(\n      {\n        errors: null\n      },\n      () => {\n        const { userData } = this.props;\n\n        if (username === userData.username) {\n          return;\n        }\n\n        this.setState(\n          {\n            performingAction: true\n          },\n          () => {\n            authentication\n              .changeUsername(username)\n              .then(() => {\n                const { user, userData } = this.props;\n\n                this.setState(\n                  {\n                    profileCompletion: authentication.getProfileCompletion({\n                      ...user,\n                      ...userData\n                    })\n                  },\n                  () => {\n                    this.hideFields();\n                  }\n                );\n              })\n              .catch(reason => {\n                const code = reason.code;\n                const message = reason.message;\n\n                switch (code) {\n                  default:\n                    this.props.openSnackbar(message);\n                    return;\n                }\n              })\n              .finally(() => {\n                this.setState({\n                  performingAction: false\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  changeEmailAddress = () => {\n    const { emailAddress } = this.state;\n\n    const errors = validate(\n      {\n        emailAddress: emailAddress\n      },\n      {\n        emailAddress: constraints.emailAddress\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState(\n      {\n        errors: null\n      },\n      () => {\n        const { user } = this.props;\n\n        if (emailAddress === user.email) {\n          return;\n        }\n\n        this.setState(\n          {\n            performingAction: true\n          },\n          () => {\n            authentication\n              .changeEmailAddress(emailAddress)\n              .then(() => {\n                const { user, userData } = this.props;\n\n                this.setState(\n                  {\n                    profileCompletion: authentication.getProfileCompletion({\n                      ...user,\n                      ...userData\n                    })\n                  },\n                  () => {\n                    this.hideFields();\n                  }\n                );\n              })\n              .catch(reason => {\n                const code = reason.code;\n                const message = reason.message;\n\n                switch (code) {\n                  default:\n                    this.props.openSnackbar(message);\n                    return;\n                }\n              })\n              .finally(() => {\n                this.setState({\n                  performingAction: false\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  verifyEmailAddress = () => {\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        authentication\n          .verifyEmailAddress()\n          .then(() => {\n            this.setState(\n              {\n                sentVerificationEmail: true\n              },\n              () => {\n                this.props.openSnackbar(\"Sent verification e-mail\");\n              }\n            );\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  changeField = fieldId => {\n    switch (fieldId) {\n      case \"first-name\":\n        this.changeFirstName();\n        return;\n\n      case \"last-name\":\n        this.changeLastName();\n        return;\n\n      case \"username\":\n        this.changeUsername();\n        return;\n\n      case \"email-address\":\n        this.changeEmailAddress();\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  handleKeyDown = (event, fieldId) => {\n    if (!event || !fieldId) {\n      return;\n    }\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (!key) {\n      return;\n    }\n\n    if (key === \"Escape\") {\n      this.hideFields();\n    } else if (key === \"Enter\") {\n      this.changeField(fieldId);\n    }\n  };\n\n  handleAvatarChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const files = event.target.files;\n\n    if (!files) {\n      return;\n    }\n\n    const avatar = files[0];\n\n    if (!avatar) {\n      return;\n    }\n\n    const fileTypes = [\n      \"image/gif\",\n      \"image/jpeg\",\n      \"image/png\",\n      \"image/webp\",\n      \"image/svg+xml\"\n    ];\n\n    if (!fileTypes.includes(avatar.type)) {\n      return;\n    }\n\n    if (avatar.size > 20 * 1024 * 1024) {\n      return;\n    }\n\n    this.setState({\n      avatar: avatar,\n      avatarUrl: URL.createObjectURL(avatar)\n    });\n  };\n\n  handleFirstNameChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const firstName = event.target.value;\n\n    this.setState({\n      firstName: firstName\n    });\n  };\n\n  handleLastNameChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const lastName = event.target.value;\n\n    this.setState({\n      lastName: lastName\n    });\n  };\n\n  handleUsernameChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const username = event.target.value;\n\n    this.setState({\n      username: username\n    });\n  };\n\n  handleEmailAddressChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const emailAddress = event.target.value;\n\n    this.setState({\n      emailAddress: emailAddress\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { user, userData } = this.props;\n\n    // Events\n    const { onDeleteAccountClick } = this.props;\n\n    const {\n      profileCompletion,\n      securityRating,\n      showingField,\n      performingAction,\n      loadingAvatar,\n      avatar,\n      avatarUrl,\n      firstName,\n      lastName,\n      username,\n      emailAddress,\n      sentVerificationEmail,\n      errors\n    } = this.state;\n\n    const hasFirstName = userData && userData.firstName;\n    const hasLastName = userData && userData.lastName;\n    const hasUsername = userData && userData.username;\n\n    return (\n      <DialogContent classes={{ root: classes.dialogContent }}>\n        <Box mb={2}>\n          <Hidden xsDown>\n            <Grid alignItems=\"center\" container>\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Box mb={1.5}>\n                    {avatar && avatarUrl && (\n                      <Badge\n                        classes={{ badge: classes.badge }}\n                        badgeContent={\n                          <Tooltip title=\"Remove\">\n                            <Fab\n                              classes={{ sizeSmall: classes.small }}\n                              color=\"secondary\"\n                              disabled={performingAction}\n                              size=\"small\"\n                              onClick={this.removeAvatar}\n                            >\n                              <CloseIcon fontSize=\"small\" />\n                            </Fab>\n                          </Tooltip>\n                        }\n                      >\n                        {loadingAvatar && (\n                          <Badge\n                            classes={{ badge: classes.loadingBadge }}\n                            badgeContent={\n                              <Fade\n                                style={{ transitionDelay: \"1s\" }}\n                                in={loadingAvatar}\n                                unmountOnExit\n                              >\n                                <CircularProgress size={120} thickness={1.8} />\n                              </Fade>\n                            }\n                          >\n                            <Avatar\n                              className={classes.avatar}\n                              alt=\"Avatar\"\n                              src={avatarUrl}\n                            />\n                          </Badge>\n                        )}\n\n                        {!loadingAvatar && (\n                          <Avatar\n                            className={classes.avatar}\n                            alt=\"Avatar\"\n                            src={avatarUrl}\n                          />\n                        )}\n                      </Badge>\n                    )}\n\n                    {!avatar && !avatarUrl && (\n                      <>\n                        {user.photoURL && (\n                          <Badge\n                            classes={{ badge: classes.badge }}\n                            badgeContent={\n                              <Tooltip title=\"Remove\">\n                                <Fab\n                                  classes={{ sizeSmall: classes.small }}\n                                  color=\"secondary\"\n                                  disabled={performingAction}\n                                  size=\"small\"\n                                  onClick={this.removeAvatar}\n                                >\n                                  <CloseIcon fontSize=\"small\" />\n                                </Fab>\n                              </Tooltip>\n                            }\n                          >\n                            {loadingAvatar && (\n                              <Badge\n                                classes={{ badge: classes.loadingBadge }}\n                                badgeContent={\n                                  <Fade\n                                    style={{ transitionDelay: \"1s\" }}\n                                    in={loadingAvatar}\n                                    unmountOnExit\n                                  >\n                                    <CircularProgress\n                                      size={120}\n                                      thickness={1.8}\n                                    />\n                                  </Fade>\n                                }\n                              >\n                                <Avatar\n                                  className={classes.avatar}\n                                  alt=\"Avatar\"\n                                  src={user.photoURL}\n                                />\n                              </Badge>\n                            )}\n\n                            {!loadingAvatar && (\n                              <Avatar\n                                className={classes.avatar}\n                                alt=\"Avatar\"\n                                src={user.photoURL}\n                              />\n                            )}\n                          </Badge>\n                        )}\n\n                        {!user.photoURL && (\n                          <>\n                            {loadingAvatar && (\n                              <Badge\n                                classes={{ badge: classes.loadingBadge }}\n                                badgeContent={\n                                  <Fade\n                                    style={{ transitionDelay: \"1s\" }}\n                                    in={loadingAvatar}\n                                    unmountOnExit\n                                  >\n                                    <CircularProgress\n                                      size={120}\n                                      thickness={1.8}\n                                    />\n                                  </Fade>\n                                }\n                              >\n                                <Avatar className={classes.avatar} alt=\"Avatar\">\n                                  {this.getNameInitialsOrIcon()}\n                                </Avatar>\n                              </Badge>\n                            )}\n\n                            {!loadingAvatar && (\n                              <Avatar className={classes.avatar} alt=\"Avatar\">\n                                {this.getNameInitialsOrIcon()}\n                              </Avatar>\n                            )}\n                          </>\n                        )}\n                      </>\n                    )}\n                  </Box>\n\n                  {avatar && avatarUrl && (\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      startIcon={<CloudUploadIcon />}\n                      variant=\"contained\"\n                      onClick={this.uploadAvatar}\n                    >\n                      Upload\n                    </Button>\n                  )}\n\n                  {!avatar && !avatarUrl && (\n                    <>\n                      <input\n                        id=\"avatar-input\"\n                        type=\"file\"\n                        hidden\n                        accept=\"image/*\"\n                        onChange={this.handleAvatarChange}\n                      />\n\n                      <label htmlFor=\"avatar-input\">\n                        <Button\n                          color=\"primary\"\n                          component=\"span\"\n                          disabled={performingAction}\n                          startIcon={<PhotoIcon />}\n                          variant=\"contained\"\n                        >\n                          Choose...\n                        </Button>\n                      </label>\n                    </>\n                  )}\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Profile completion</Typography>\n\n                  {profileCompletion === 0 && (\n                    <Typography color=\"error\" variant=\"h5\">\n                      {profileCompletion}%\n                    </Typography>\n                  )}\n\n                  {profileCompletion === 100 && (\n                    <Typography color=\"primary\" variant=\"h5\">\n                      {profileCompletion}%\n                    </Typography>\n                  )}\n\n                  {profileCompletion !== 0 && profileCompletion !== 100 && (\n                    <Typography color=\"secondary\" variant=\"h5\">\n                      {profileCompletion}%\n                    </Typography>\n                  )}\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Security rating</Typography>\n\n                  {securityRating === 0 && (\n                    <Typography color=\"error\" variant=\"h5\">\n                      {securityRating}%\n                    </Typography>\n                  )}\n\n                  {securityRating === 100 && (\n                    <Typography color=\"primary\" variant=\"h5\">\n                      {securityRating}%\n                    </Typography>\n                  )}\n\n                  {securityRating !== 0 && securityRating !== 100 && (\n                    <Typography color=\"secondary\" variant=\"h5\">\n                      {securityRating}%\n                    </Typography>\n                  )}\n                </Box>\n              </Grid>\n            </Grid>\n          </Hidden>\n\n          <Hidden smUp>\n            <Box textAlign=\"center\" mb={3}>\n              <Box mb={1.5}>\n                {avatar && avatarUrl && (\n                  <Badge\n                    classes={{ badge: classes.badge }}\n                    badgeContent={\n                      <Tooltip title=\"Remove\">\n                        <Fab\n                          classes={{ sizeSmall: classes.small }}\n                          color=\"secondary\"\n                          disabled={performingAction}\n                          size=\"small\"\n                          onClick={this.removeAvatar}\n                        >\n                          <CloseIcon fontSize=\"small\" />\n                        </Fab>\n                      </Tooltip>\n                    }\n                  >\n                    {loadingAvatar && (\n                      <Badge\n                        classes={{ badge: classes.loadingBadge }}\n                        badgeContent={\n                          <Fade\n                            style={{ transitionDelay: \"1s\" }}\n                            in={loadingAvatar}\n                            unmountOnExit\n                          >\n                            <CircularProgress size={120} thickness={1.8} />\n                          </Fade>\n                        }\n                      >\n                        <Avatar\n                          className={classes.avatar}\n                          alt=\"Avatar\"\n                          src={avatarUrl}\n                        />\n                      </Badge>\n                    )}\n\n                    {!loadingAvatar && (\n                      <Avatar\n                        className={classes.avatar}\n                        alt=\"Avatar\"\n                        src={avatarUrl}\n                      />\n                    )}\n                  </Badge>\n                )}\n\n                {!avatar && !avatarUrl && (\n                  <>\n                    {user.photoURL && (\n                      <Badge\n                        classes={{ badge: classes.badge }}\n                        badgeContent={\n                          <Tooltip title=\"Remove\">\n                            <Fab\n                              classes={{ sizeSmall: classes.small }}\n                              color=\"secondary\"\n                              disabled={performingAction}\n                              size=\"small\"\n                              onClick={this.removeAvatar}\n                            >\n                              <CloseIcon fontSize=\"small\" />\n                            </Fab>\n                          </Tooltip>\n                        }\n                      >\n                        {loadingAvatar && (\n                          <Badge\n                            classes={{ badge: classes.loadingBadge }}\n                            badgeContent={\n                              <CircularProgress size={120} thickness={1.8} />\n                            }\n                          >\n                            <Avatar\n                              className={classes.avatar}\n                              alt=\"Avatar\"\n                              src={user.photoURL}\n                            />\n                          </Badge>\n                        )}\n\n                        {!loadingAvatar && (\n                          <Avatar\n                            className={classes.avatar}\n                            alt=\"Avatar\"\n                            src={user.photoURL}\n                          />\n                        )}\n                      </Badge>\n                    )}\n\n                    {!user.photoURL && (\n                      <>\n                        {loadingAvatar && (\n                          <Badge\n                            classes={{ badge: classes.loadingBadge }}\n                            badgeContent={\n                              <Fade\n                                style={{ transitionDelay: \"1s\" }}\n                                in={loadingAvatar}\n                                unmountOnExit\n                              >\n                                <CircularProgress size={120} thickness={1.8} />\n                              </Fade>\n                            }\n                          >\n                            <Avatar className={classes.avatar} alt=\"Avatar\">\n                              {this.getNameInitialsOrIcon()}\n                            </Avatar>\n                          </Badge>\n                        )}\n\n                        {!loadingAvatar && (\n                          <Avatar className={classes.avatar} alt=\"Avatar\">\n                            {this.getNameInitialsOrIcon()}\n                          </Avatar>\n                        )}\n                      </>\n                    )}\n                  </>\n                )}\n              </Box>\n\n              {avatar && avatarUrl && (\n                <Button\n                  color=\"primary\"\n                  disabled={performingAction}\n                  startIcon={<CloudUploadIcon />}\n                  variant=\"contained\"\n                  onClick={this.uploadAvatar}\n                >\n                  Upload\n                </Button>\n              )}\n\n              {!avatar && !avatarUrl && (\n                <>\n                  <input\n                    id=\"avatar-input\"\n                    type=\"file\"\n                    hidden\n                    accept=\"image/*\"\n                    onChange={this.handleAvatarChange}\n                  />\n\n                  <label htmlFor=\"avatar-input\">\n                    <Button\n                      color=\"primary\"\n                      component=\"span\"\n                      disabled={performingAction}\n                      startIcon={<PhotoIcon />}\n                      variant=\"contained\"\n                    >\n                      Choose...\n                    </Button>\n                  </label>\n                </>\n              )}\n            </Box>\n\n            <Grid container>\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Profile completion</Typography>\n\n                  {profileCompletion === 0 && (\n                    <Typography color=\"error\" variant=\"h5\">\n                      {profileCompletion}%\n                    </Typography>\n                  )}\n\n                  {profileCompletion === 100 && (\n                    <Typography color=\"primary\" variant=\"h5\">\n                      {profileCompletion}%\n                    </Typography>\n                  )}\n\n                  {profileCompletion !== 0 && profileCompletion !== 100 && (\n                    <Typography color=\"secondary\" variant=\"h5\">\n                      {profileCompletion}%\n                    </Typography>\n                  )}\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Security rating</Typography>\n\n                  {securityRating === 0 && (\n                    <Typography color=\"error\" variant=\"h5\">\n                      {securityRating}%\n                    </Typography>\n                  )}\n\n                  {securityRating === 100 && (\n                    <Typography color=\"primary\" variant=\"h5\">\n                      {securityRating}%\n                    </Typography>\n                  )}\n\n                  {securityRating !== 0 && securityRating !== 100 && (\n                    <Typography color=\"secondary\" variant=\"h5\">\n                      {securityRating}%\n                    </Typography>\n                  )}\n                </Box>\n              </Grid>\n            </Grid>\n          </Hidden>\n        </Box>\n\n        <List disablePadding>\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!hasFirstName && (\n              <ListItemIcon>\n                <Tooltip title=\"No first name\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            )}\n\n            {showingField === \"first-name\" && (\n              <TextField\n                autoComplete=\"given-name\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.firstName)}\n                fullWidth\n                helperText={\n                  errors && errors.firstName\n                    ? errors.firstName[0]\n                    : \"Press Enter to change your first name\"\n                }\n                label=\"First name\"\n                placeholder={hasFirstName && userData.firstName}\n                required\n                type=\"text\"\n                value={firstName}\n                variant=\"filled\"\n                onBlur={this.hideFields}\n                onKeyDown={event => this.handleKeyDown(event, \"first-name\")}\n                onChange={this.handleFirstNameChange}\n              />\n            )}\n\n            {showingField !== \"first-name\" && (\n              <>\n                <ListItemText\n                  primary=\"First name\"\n                  secondary={\n                    hasFirstName\n                      ? userData.firstName\n                      : \"You don’t have a first name\"\n                  }\n                />\n\n                <ListItemSecondaryAction>\n                  {hasFirstName && (\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton\n                          disabled={performingAction}\n                          onClick={() => this.showField(\"first-name\")}\n                        >\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  )}\n\n                  {!hasFirstName && (\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField(\"first-name\")}\n                    >\n                      Add\n                    </Button>\n                  )}\n                </ListItemSecondaryAction>\n              </>\n            )}\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!hasLastName && (\n              <ListItemIcon>\n                <Tooltip title=\"No last name\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            )}\n\n            {showingField === \"last-name\" && (\n              <TextField\n                autoComplete=\"family-name\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.lastName)}\n                fullWidth\n                helperText={\n                  errors && errors.lastName\n                    ? errors.lastName[0]\n                    : \"Press Enter to change your last name\"\n                }\n                label=\"Last name\"\n                placeholder={hasLastName && userData.lastName}\n                required\n                type=\"text\"\n                value={lastName}\n                variant=\"filled\"\n                onBlur={this.hideFields}\n                onKeyDown={event => this.handleKeyDown(event, \"last-name\")}\n                onChange={this.handleLastNameChange}\n              />\n            )}\n\n            {showingField !== \"last-name\" && (\n              <>\n                <ListItemText\n                  primary=\"Last name\"\n                  secondary={\n                    hasLastName\n                      ? userData.lastName\n                      : \"You don’t have a last name\"\n                  }\n                />\n\n                <ListItemSecondaryAction>\n                  {hasLastName && (\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton\n                          disabled={performingAction}\n                          onClick={() => this.showField(\"last-name\")}\n                        >\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  )}\n\n                  {!hasLastName && (\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField(\"last-name\")}\n                    >\n                      Add\n                    </Button>\n                  )}\n                </ListItemSecondaryAction>\n              </>\n            )}\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonOutlineIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!hasUsername && (\n              <ListItemIcon>\n                <Tooltip title=\"No username\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            )}\n\n            {showingField === \"username\" && (\n              <TextField\n                autoComplete=\"username\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.username)}\n                fullWidth\n                helperText={\n                  errors && errors.username\n                    ? errors.username[0]\n                    : \"Press Enter to change your username\"\n                }\n                label=\"Username\"\n                placeholder={hasUsername && userData.username}\n                required\n                type=\"text\"\n                value={username}\n                variant=\"filled\"\n                onBlur={this.hideFields}\n                onKeyDown={event => this.handleKeyDown(event, \"username\")}\n                onChange={this.handleUsernameChange}\n              />\n            )}\n\n            {showingField !== \"username\" && (\n              <>\n                <ListItemText\n                  primary=\"Username\"\n                  secondary={\n                    hasUsername\n                      ? userData.username\n                      : \"You don’t have a username\"\n                  }\n                />\n\n                <ListItemSecondaryAction>\n                  {hasUsername && (\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton\n                          disabled={performingAction}\n                          onClick={() => this.showField(\"username\")}\n                        >\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  )}\n\n                  {!hasUsername && (\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField(\"username\")}\n                    >\n                      Add\n                    </Button>\n                  )}\n                </ListItemSecondaryAction>\n              </>\n            )}\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <EmailIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {user.email && (\n              <ListItemIcon>\n                <>\n                  {user.emailVerified && (\n                    <Tooltip title=\"Verified\">\n                      <CheckIcon color=\"primary\" />\n                    </Tooltip>\n                  )}\n\n                  {!user.emailVerified && (\n                    <Tooltip title=\"Not verified\">\n                      <WarningIcon color=\"error\" />\n                    </Tooltip>\n                  )}\n                </>\n              </ListItemIcon>\n            )}\n\n            {!user.email && (\n              <ListItemIcon>\n                <Tooltip title=\"No e-mail address\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            )}\n\n            {showingField === \"email-address\" && (\n              <TextField\n                autoComplete=\"email\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.emailAddress)}\n                fullWidth\n                helperText={\n                  errors && errors.emailAddress\n                    ? errors.emailAddress[0]\n                    : \"Press Enter to change your e-mail address\"\n                }\n                label=\"E-mail address\"\n                placeholder={user.email}\n                required\n                type=\"email\"\n                value={emailAddress}\n                variant=\"filled\"\n                onBlur={this.hideFields}\n                onKeyDown={event => this.handleKeyDown(event, \"email-address\")}\n                onChange={this.handleEmailAddressChange}\n              />\n            )}\n\n            {showingField !== \"email-address\" && (\n              <>\n                <ListItemText\n                  primary=\"E-mail address\"\n                  secondary={\n                    user.email ? user.email : \"You don’t have an e-mail address\"\n                  }\n                />\n\n                {user.email && !user.emailVerified && (\n                  <Box clone mr={7}>\n                    <ListItemSecondaryAction>\n                      <Tooltip title=\"Verify\">\n                        <div>\n                          <IconButton\n                            color=\"secondary\"\n                            disabled={performingAction || sentVerificationEmail}\n                            onClick={this.verifyEmailAddress}\n                          >\n                            <CheckIcon />\n                          </IconButton>\n                        </div>\n                      </Tooltip>\n                    </ListItemSecondaryAction>\n                  </Box>\n                )}\n\n                <ListItemSecondaryAction>\n                  {user.email && (\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton\n                          disabled={performingAction}\n                          onClick={() => this.showField(\"email-address\")}\n                        >\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  )}\n\n                  {!user.email && (\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField(\"email-address\")}\n                    >\n                      Add\n                    </Button>\n                  )}\n                </ListItemSecondaryAction>\n              </>\n            )}\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <AccessTimeIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <Hidden xsDown>\n              <ListItemText\n                primary=\"Signed in\"\n                secondary={moment(user.metadata.lastSignInTime).format(\"LLLL\")}\n              />\n            </Hidden>\n\n            <Hidden smUp>\n              <ListItemText\n                primary=\"Signed in\"\n                secondary={moment(user.metadata.lastSignInTime).format(\"llll\")}\n              />\n            </Hidden>\n          </ListItem>\n\n          <Box mt={1} mb={1}>\n            <Divider light />\n          </Box>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <DeleteForeverIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <ListItemText\n              primary=\"Delete account\"\n              secondary=\"Accounts can’t be recovered\"\n            />\n\n            <ListItemSecondaryAction>\n              <Button\n                color=\"secondary\"\n                disabled={performingAction}\n                variant=\"contained\"\n                onClick={onDeleteAccountClick}\n              >\n                Delete\n              </Button>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </DialogContent>\n    );\n  }\n\n  componentDidMount() {\n    const { user, userData } = this.props;\n\n    this.setState({\n      profileCompletion: authentication.getProfileCompletion({\n        ...user,\n        ...userData\n      }),\n      securityRating: authentication.getSecurityRating(user, userData)\n    });\n  }\n\n  componentWillUnmount() {\n    const { avatarUrl } = this.state;\n\n    if (avatarUrl) {\n      URL.revokeObjectURL(avatarUrl);\n\n      this.setState({\n        avatarUrl: \"\"\n      });\n    }\n  }\n}\n\nAccountTab.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  user: PropTypes.object.isRequired,\n  userData: PropTypes.object,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired,\n\n  // Events\n  onDeleteAccountClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AccountTab);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport Box from \"@material-ui/core/Box\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\n\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Button from \"@material-ui/core/Button\";\n\nimport FiberManualRecord from \"@material-ui/icons/FiberManualRecord\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport FormatColorResetIcon from \"@material-ui/icons/FormatColorReset\";\n\nimport appearance from \"../../services/appearance\";\n\nclass AppearanceTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      performingAction: false,\n      primaryColorLabelWidth: 0,\n      secondaryColorLabelWidth: 0\n    };\n\n    this.primaryColorLabel = React.createRef();\n    this.secondaryColorLabel = React.createRef();\n  }\n\n  handlePrimaryColorChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const primaryColor = event.target.value;\n\n    if (!primaryColor) {\n      return;\n    }\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.primaryColor.id === primaryColor) {\n      return;\n    }\n\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        appearance\n          .changeTheme({\n            primaryColor: primaryColor,\n            secondaryColor: theme.secondaryColor.id,\n            dark: theme.dark\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  handleSecondaryColorChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const secondaryColor = event.target.value;\n\n    if (!secondaryColor) {\n      return;\n    }\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.secondaryColor.id === secondaryColor) {\n      return;\n    }\n\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        appearance\n          .changeTheme({\n            primaryColor: theme.primaryColor.id,\n            secondaryColor: secondaryColor,\n            dark: theme.dark\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  handleDarkModeChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const dark = event.target.checked;\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.dark === dark) {\n      return;\n    }\n\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        appearance\n          .changeTheme({\n            primaryColor: theme.primaryColor.id,\n            secondaryColor: theme.secondaryColor.id,\n            dark: dark\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  handleResetThemeClick = () => {\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (appearance.isDefaultTheme(theme)) {\n      return;\n    }\n\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        appearance\n          .resetTheme()\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  render() {\n    // Properties\n    const { theme } = this.props;\n\n    if (!theme) {\n      return null;\n    }\n\n    const {\n      performingAction,\n      primaryColorLabelWidth,\n      secondaryColorLabelWidth\n    } = this.state;\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          <Box mb={1}>\n            <ListItem>\n              <Hidden xsDown>\n                <ListItemIcon>\n                  <FiberManualRecord color=\"primary\" />\n                </ListItemIcon>\n              </Hidden>\n\n              <FormControl\n                disabled={performingAction}\n                fullWidth\n                variant=\"outlined\"\n              >\n                <InputLabel ref={this.primaryColorLabel}>\n                  Primary color\n                </InputLabel>\n\n                <Hidden smUp>\n                  <Select\n                    native\n                    value={theme.primaryColor.id}\n                    labelWidth={primaryColorLabelWidth}\n                    onChange={this.handlePrimaryColorChange}\n                  >\n                    {Object.keys(appearance.colors).map(color => {\n                      color = appearance.colors[color];\n\n                      return (\n                        <option key={color.id} value={color.id}>\n                          {color.name}\n                        </option>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n\n                <Hidden xsDown>\n                  <Select\n                    value={theme.primaryColor.id}\n                    labelWidth={primaryColorLabelWidth}\n                    onChange={this.handlePrimaryColorChange}\n                  >\n                    {Object.keys(appearance.colors).map(color => {\n                      color = appearance.colors[color];\n\n                      return (\n                        <MenuItem key={color.id} value={color.id}>\n                          {color.name}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n              </FormControl>\n            </ListItem>\n          </Box>\n\n          <Box mb={1}>\n            <ListItem>\n              <Hidden xsDown>\n                <ListItemIcon>\n                  <FiberManualRecord color=\"secondary\" />\n                </ListItemIcon>\n              </Hidden>\n\n              <FormControl\n                disabled={performingAction}\n                fullWidth\n                variant=\"outlined\"\n              >\n                <InputLabel ref={this.secondaryColorLabel}>\n                  Secondary color\n                </InputLabel>\n\n                <Hidden smUp>\n                  <Select\n                    native\n                    value={theme.secondaryColor.id}\n                    labelWidth={secondaryColorLabelWidth}\n                    onChange={this.handleSecondaryColorChange}\n                  >\n                    {Object.keys(appearance.colors).map(color => {\n                      color = appearance.colors[color];\n\n                      return (\n                        <option key={color.id} value={color.id}>\n                          {color.name}\n                        </option>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n\n                <Hidden xsDown>\n                  <Select\n                    value={theme.secondaryColor.id}\n                    labelWidth={secondaryColorLabelWidth}\n                    onChange={this.handleSecondaryColorChange}\n                  >\n                    {Object.keys(appearance.colors).map(color => {\n                      color = appearance.colors[color];\n\n                      return (\n                        <MenuItem key={color.id} value={color.id}>\n                          {color.name}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n              </FormControl>\n            </ListItem>\n          </Box>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <Brightness4Icon />\n              </ListItemIcon>\n            </Hidden>\n\n            <ListItemText\n              primary=\"Dark mode\"\n              secondary=\"Displays mostly dark surfaces\"\n            />\n\n            <ListItemSecondaryAction>\n              <Hidden xsDown>\n                <Checkbox\n                  color=\"primary\"\n                  checked={theme.dark}\n                  onChange={this.handleDarkModeChange}\n                />\n              </Hidden>\n\n              <Hidden smUp>\n                <Switch\n                  color=\"primary\"\n                  checked={theme.dark}\n                  onChange={this.handleDarkModeChange}\n                />\n              </Hidden>\n            </ListItemSecondaryAction>\n          </ListItem>\n\n          <Box mt={2} mb={1}>\n            <Divider light />\n          </Box>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <FormatColorResetIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <ListItemText\n              primary=\"Reset theme\"\n              secondary={\n                appearance.isDefaultTheme(theme)\n                  ? \"No changes made\"\n                  : \"Changes will be reset\"\n              }\n            />\n\n            <ListItemSecondaryAction>\n              <Button\n                color=\"secondary\"\n                disabled={appearance.isDefaultTheme(theme) || performingAction}\n                variant=\"contained\"\n                onClick={this.handleResetThemeClick}\n              >\n                Reset\n              </Button>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </DialogContent>\n    );\n  }\n\n  componentDidMount() {\n    this.setState({\n      primaryColorLabelWidth: this.primaryColorLabel.current.offsetWidth,\n      secondaryColorLabelWidth: this.secondaryColorLabel.current.offsetWidth\n    });\n  }\n}\n\nAppearanceTab.propTypes = {\n  // Properties\n  theme: PropTypes.object.isRequired,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default AppearanceTab;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport LinkOffIcon from \"@material-ui/icons/LinkOff\";\n\nimport authProviders from \"../../authProviders\";\n\nimport authentication from \"../../services/authentication\";\n\nclass LinksTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      performingAction: false\n    };\n  }\n\n  linkAuthProvider = authProvider => {\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        authentication\n          .linkAuthProvider(authProvider.providerId)\n          .then(value => {\n            this.props.openSnackbar(`${authProvider.name} linked`, 5);\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  unlinkAuthProvider = authProvider => {\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        authentication\n          .unlinkAuthProvider(authProvider.providerId)\n          .then(value => {\n            this.props.openSnackbar(`${authProvider.name} unlinked`, 4);\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  render() {\n    // Properties\n    const { theme } = this.props;\n\n    const { performingAction } = this.state;\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          {authProviders.map(authProvider => {\n            const authProviderData = authentication.authProviderData(\n              authProvider.providerId\n            );\n            let identifier = null;\n\n            if (authProviderData) {\n              const displayName = authProviderData.displayName;\n              const emailAddress = authProviderData.email;\n              const phoneNumber = authProviderData.phoneNumber;\n\n              identifier = displayName || emailAddress || phoneNumber;\n            }\n\n            return (\n              <ListItem key={authProvider.providerId}>\n                <ListItemIcon>\n                  <Box color={theme.dark ? null : authProvider.color}>\n                    {authProvider.icon}\n                  </Box>\n                </ListItemIcon>\n\n                {authProviderData && (\n                  <ListItemText\n                    primary={authProvider.name}\n                    secondary={identifier}\n                  />\n                )}\n\n                {!authProviderData && (\n                  <ListItemText primary={authProvider.name} />\n                )}\n\n                <ListItemSecondaryAction>\n                  {authProviderData && (\n                    <Tooltip title=\"Unlink\">\n                      <div>\n                        <IconButton\n                          disabled={performingAction}\n                          onClick={() => this.unlinkAuthProvider(authProvider)}\n                        >\n                          <LinkOffIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  )}\n\n                  {!authProviderData && (\n                    <Tooltip title=\"Link\">\n                      <div>\n                        <IconButton\n                          disabled={performingAction}\n                          onClick={() => this.linkAuthProvider(authProvider)}\n                        >\n                          <LinkIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  )}\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </List>\n      </DialogContent>\n    );\n  }\n}\n\nLinksTab.propTypes = {\n  // Properties\n  theme: PropTypes.object.isRequired,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default LinksTab;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport validate from \"validate.js\";\nimport moment from \"moment\";\n\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\n\nimport Hidden from \"@material-ui/core/Hidden\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nimport constraints from \"../../constraints\";\nimport authentication from \"../../services/authentication\";\n\nconst initialState = {\n  showingField: \"\",\n  password: \"\",\n  passwordConfirmation: \"\",\n  performingAction: false,\n  errors: null\n};\n\nclass SecurityTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  showField = fieldId => {\n    if (!fieldId) {\n      return;\n    }\n\n    this.setState({\n      showingField: fieldId\n    });\n  };\n\n  hideFields = callback => {\n    this.setState(\n      {\n        showingField: \"\",\n        password: \"\",\n        passwordConfirmation: \"\",\n        errors: null\n      },\n      () => {\n        if (callback && typeof callback === \"function\") {\n          callback();\n        }\n      }\n    );\n  };\n\n  changeField = fieldId => {\n    switch (fieldId) {\n      case \"password\":\n        const { password } = this.state;\n\n        const errors = validate(\n          {\n            password: password\n          },\n          {\n            password: constraints.password\n          }\n        );\n\n        if (errors) {\n          this.setState({\n            errors: errors\n          });\n\n          return;\n        }\n\n        this.setState(\n          {\n            errors: null\n          },\n          () => {\n            this.showField(\"password-confirmation\");\n          }\n        );\n        return;\n\n      case \"password-confirmation\":\n        this.changePassword();\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  changePassword = () => {\n    const { password, passwordConfirmation } = this.state;\n\n    const errors = validate(\n      {\n        password: password,\n        passwordConfirmation: passwordConfirmation\n      },\n      {\n        password: constraints.password,\n        passwordConfirmation: constraints.passwordConfirmation\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState(\n      {\n        errors: null\n      },\n      () => {\n        this.setState(\n          {\n            performingAction: true\n          },\n          () => {\n            authentication\n              .changePassword(password)\n              .then(() => {\n                this.hideFields(() => {\n                  this.props.openSnackbar(\"Changed password\");\n                });\n              })\n              .catch(reason => {\n                const code = reason.code;\n                const message = reason.message;\n\n                switch (code) {\n                  default:\n                    this.props.openSnackbar(message);\n                    return;\n                }\n              })\n              .finally(() => {\n                this.setState({\n                  performingAction: false\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  handleKeyDown = (event, fieldId) => {\n    if (!event || !fieldId) {\n      return;\n    }\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (!key) {\n      return;\n    }\n\n    if (key === \"Escape\") {\n      this.hideFields();\n    } else if (key === \"Enter\") {\n      this.changeField(fieldId);\n    }\n  };\n\n  handlePasswordChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const password = event.target.value;\n\n    this.setState({\n      password: password\n    });\n  };\n\n  handlePasswordConfirmationChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const passwordConfirmation = event.target.value;\n\n    this.setState({\n      passwordConfirmation: passwordConfirmation\n    });\n  };\n\n  render() {\n    // Properties\n    const { userData } = this.props;\n\n    const {\n      showingField,\n      password,\n      passwordConfirmation,\n      performingAction,\n      errors\n    } = this.state;\n\n    const hasChangedPassword = userData && userData.lastPasswordChange;\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <LockIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {showingField === \"password\" && (\n              <TextField\n                autoComplete=\"new-password\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.password)}\n                fullWidth\n                helperText={\n                  errors && errors.password\n                    ? errors.password[0]\n                    : \"Press Enter to change your password\"\n                }\n                label=\"Password\"\n                required\n                type=\"password\"\n                value={password}\n                variant=\"filled\"\n                onBlur={this.hideFields}\n                onKeyDown={event => this.handleKeyDown(event, \"password\")}\n                onChange={this.handlePasswordChange}\n              />\n            )}\n\n            {showingField === \"password-confirmation\" && (\n              <TextField\n                autoComplete=\"new-password\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.passwordConfirmation)}\n                fullWidth\n                helperText={\n                  errors && errors.passwordConfirmation\n                    ? errors.passwordConfirmation[0]\n                    : \"Press Enter to change your password\"\n                }\n                label=\"Password confirmation\"\n                required\n                type=\"password\"\n                value={passwordConfirmation}\n                variant=\"filled\"\n                onBlur={this.hideFields}\n                onKeyDown={event =>\n                  this.handleKeyDown(event, \"password-confirmation\")\n                }\n                onChange={this.handlePasswordConfirmationChange}\n              />\n            )}\n\n            {showingField !== \"password\" &&\n              showingField !== \"password-confirmation\" && (\n                <>\n                  <Hidden xsDown>\n                    <ListItemText\n                      primary=\"Password\"\n                      secondary={\n                        hasChangedPassword\n                          ? `Last changed ${moment(\n                              userData.lastPasswordChange.toDate()\n                            ).format(\"LL\")}`\n                          : \"Never changed\"\n                      }\n                    />\n                  </Hidden>\n\n                  <Hidden smUp>\n                    <ListItemText\n                      primary=\"Password\"\n                      secondary={\n                        hasChangedPassword\n                          ? `Last changed ${moment(\n                              userData.lastPasswordChange.toDate()\n                            ).format(\"ll\")}`\n                          : \"Never changed\"\n                      }\n                    />\n                  </Hidden>\n\n                  <ListItemSecondaryAction>\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton\n                          disabled={performingAction}\n                          onClick={() => this.showField(\"password\")}\n                        >\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  </ListItemSecondaryAction>\n                </>\n              )}\n          </ListItem>\n        </List>\n      </DialogContent>\n    );\n  }\n}\n\nSecurityTab.propTypes = {\n  // Properties\n  userData: PropTypes.object,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default SecurityTab;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport PaletteIcon from \"@material-ui/icons/Palette\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport SecurityIcon from \"@material-ui/icons/Security\";\n\nimport SwipeableViews from \"react-swipeable-views\";\n\nimport AccountTab from \"../AccountTab\";\nimport AppearanceTab from \"../AppearanceTab\";\nimport LinksTab from \"../LinksTab\";\nimport SecurityTab from \"../SecurityTab\";\n\nconst styles = theme => ({\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  },\n\n  tabs: {\n    display: \"initial\"\n  }\n});\n\nconst tabs = [\n  {\n    key: \"account\",\n    icon: <AccountCircleIcon />,\n    label: \"Account\"\n  },\n\n  {\n    key: \"appearance\",\n    icon: <PaletteIcon />,\n    label: \"Appearance\"\n  },\n\n  {\n    key: \"links\",\n    icon: <LinkIcon />,\n    label: \"Links\"\n  },\n\n  {\n    key: \"security\",\n    icon: <SecurityIcon />,\n    label: \"Security\"\n  }\n];\n\nconst initialState = {\n  selectedTab: 0\n};\n\nclass SettingsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleTabChange = (event, value) => {\n    this.setState({\n      selectedTab: value\n    });\n  };\n\n  handleIndexChange = index => {\n    this.setState({\n      selectedTab: index\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const { user, userData, theme } = this.props;\n\n    // Custom Functions\n    const { openSnackbar } = this.props;\n\n    // Custom Functions\n    const { onDeleteAccountClick } = this.props;\n\n    const { selectedTab } = this.state;\n\n    return (\n      <Dialog {...dialogProps} onExited={this.handleExited}>\n        <DialogTitle disableTypography>\n          <Typography variant=\"h6\">Settings</Typography>\n\n          <Tooltip title=\"Close\">\n            <IconButton\n              className={classes.closeButton}\n              onClick={dialogProps.onClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n        </DialogTitle>\n\n        <Tabs\n          classes={{ root: classes.tabs }}\n          style={{ overflow: \"initial\", minHeight: \"initial\" }}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          value={selectedTab}\n          variant=\"fullWidth\"\n          onChange={this.handleTabChange}\n        >\n          {tabs.map(tab => {\n            return <Tab key={tab.key} icon={tab.icon} label={tab.label} />;\n          })}\n        </Tabs>\n\n        <SwipeableViews\n          index={selectedTab}\n          onChangeIndex={this.handleIndexChange}\n        >\n          <AccountTab\n            user={user}\n            userData={userData}\n            openSnackbar={openSnackbar}\n            onDeleteAccountClick={onDeleteAccountClick}\n          />\n\n          <AppearanceTab theme={theme} openSnackbar={openSnackbar} />\n\n          <LinksTab theme={theme} openSnackbar={openSnackbar} />\n\n          <SecurityTab\n            user={user}\n            userData={userData}\n            openSnackbar={openSnackbar}\n          />\n        </SwipeableViews>\n      </Dialog>\n    );\n  }\n}\n\nSettingsDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  theme: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  userData: PropTypes.object,\n\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired,\n\n  // Custom Events\n  onDeleteAccountClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SettingsDialog);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nconst initialState = {\n  username: \"\"\n};\n\nclass DeleteAccountDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  handleKeyPress = event => {\n    const { userData } = this.props;\n\n    if (userData && userData.username) {\n      const { username } = this.state;\n\n      if (!username) {\n        return;\n      }\n\n      if (username !== userData.username) {\n        return;\n      }\n    }\n\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === \"Enter\") {\n      this.props.deleteAccount();\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleUsernameChange = event => {\n    const username = event.target.value;\n\n    this.setState({\n      username: username\n    });\n  };\n\n  render() {\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const { performingAction, userData } = this.props;\n\n    // Custom Functions\n    const { deleteAccount } = this.props;\n\n    const { username } = this.state;\n\n    const hasUsername = userData && userData.username;\n\n    return (\n      <Dialog\n        {...dialogProps}\n        onKeyPress={this.handleKeyPress}\n        onExited={this.handleExited}\n      >\n        <DialogTitle>Delete account?</DialogTitle>\n\n        <DialogContent>\n          <Box mb={hasUsername ? 2 : 0}>\n            <DialogContentText>\n              Deleted accounts can’t be recovered. All data associated with your\n              account will be deleted.\n            </DialogContentText>\n\n            {hasUsername && (\n              <DialogContentText>\n                Type your username and <Hidden xsDown>click</Hidden>\n                <Hidden smUp>tap</Hidden> Delete to delete your account. This\n                action is irreversible.\n              </DialogContentText>\n            )}\n          </Box>\n\n          {hasUsername && (\n            <TextField\n              autoComplete=\"username\"\n              autoFocus\n              color=\"secondary\"\n              disabled={performingAction}\n              fullWidth\n              label=\"Username\"\n              placeholder={userData.username}\n              required\n              type=\"text\"\n              value={username}\n              variant=\"outlined\"\n              onChange={this.handleUsernameChange}\n            />\n          )}\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            color=\"secondary\"\n            disabled={performingAction}\n            onClick={dialogProps.onClose}\n          >\n            Cancel\n          </Button>\n          <Button\n            color=\"secondary\"\n            disabled={\n              performingAction ||\n              (hasUsername && username !== userData.username)\n            }\n            variant=\"contained\"\n            onClick={deleteAccount}\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nDeleteAccountDialog.propTypes = {\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  performingAction: PropTypes.bool.isRequired,\n  userData: PropTypes.object,\n\n  // Custom Functions\n  deleteAccount: PropTypes.func.isRequired\n};\n\nexport default DeleteAccountDialog;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nconst styles = theme => ({\n  noTitlePadding: {\n    paddingTop: theme.spacing(3)\n  }\n});\n\nclass AlertDialog extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const {\n      title,\n      contentText,\n      dismissiveAction,\n      confirmingAction,\n      acknowledgementAction\n    } = this.props;\n\n    if ((dismissiveAction || confirmingAction) && acknowledgementAction) {\n      console.error(\n        \"Dialogs should contain a maximum of two actions. \" +\n          \"If a single action is provided, it must be an acknowledgement action. \" +\n          \"If two actions are provided, one must be a confirming action, and the other a dismissing action. \" +\n          \"Providing a third action such as “Learn more” is not recommended as it navigates the user away from the dialog, leaving the dialog task unfinished. \" +\n          \"https://material.io/design/components/dialogs.html#actions\"\n      );\n\n      return null;\n    }\n\n    return (\n      <Dialog {...dialogProps}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n\n        <DialogContent className={title ? null : classes.noTitlePadding}>\n          <DialogContentText>{contentText}</DialogContentText>\n        </DialogContent>\n\n        {(dismissiveAction || confirmingAction || acknowledgementAction) && (\n          <DialogActions>\n            {dismissiveAction}\n            {confirmingAction}\n            {acknowledgementAction}\n          </DialogActions>\n        )}\n      </Dialog>\n    );\n  }\n}\n\nAlertDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  title: PropTypes.string,\n  contentText: PropTypes.string.isRequired,\n  dismissiveAction: PropTypes.element,\n  confirmingAction: PropTypes.element,\n  acknowledgementAction: PropTypes.element\n};\n\nexport default withStyles(styles)(AlertDialog);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport Hidden from \"@material-ui/core/Hidden\";\n\nimport AboutDialog from \"../AboutDialog\";\nimport SignUpDialog from \"../SignUpDialog\";\nimport SignInDialog from \"../SignInDialog\";\nimport SettingsDialog from \"../SettingsDialog\";\nimport DeleteAccountDialog from \"../DeleteAccountDialog\";\nimport AlertDialog from \"../AlertDialog\";\n\nclass DialogHost extends Component {\n  render() {\n    // Properties\n    const { performingAction, theme, user, userData, dialogs } = this.props;\n\n    // Functions\n    const { openSnackbar } = this.props;\n\n    const aboutDialog = dialogs.aboutDialog;\n    const signUpDialog = dialogs.signUpDialog;\n    const signInDialog = dialogs.signInDialog;\n    const settingsDialog = dialogs.settingsDialog;\n    const deleteAccountDialog = dialogs.deleteAccountDialog;\n    const signOutDialog = dialogs.signOutDialog;\n\n    return (\n      <>\n        <AboutDialog\n          dialogProps={aboutDialog.dialogProps}\n          performingAction={performingAction}\n          theme={theme}\n          user={user}\n          userData={userData}\n          openSnackbar={openSnackbar}\n          {...aboutDialog.props}\n        />\n\n        {user && (\n          <>\n            <AlertDialog\n              dialogProps={signOutDialog.dialogProps}\n              performingAction={performingAction}\n              theme={theme}\n              user={user}\n              userData={userData}\n              openSnackbar={openSnackbar}\n              {...signOutDialog.props}\n            />\n          </>\n        )}\n\n        <Hidden xsDown>\n          {user && (\n            <>\n              <DeleteAccountDialog\n                dialogProps={deleteAccountDialog.dialogProps}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...deleteAccountDialog.props}\n              />\n            </>\n          )}\n\n          {!user && (\n            <>\n              <SignUpDialog\n                dialogProps={signUpDialog.dialogProps}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...signUpDialog.props}\n              />\n\n              <SignInDialog\n                dialogProps={signInDialog.dialogProps}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...signInDialog.props}\n              />\n            </>\n          )}\n        </Hidden>\n\n        <Hidden smDown>\n          {user && (\n            <>\n              <SettingsDialog\n                dialogProps={settingsDialog.dialogProps}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...settingsDialog.props}\n              />\n            </>\n          )}\n        </Hidden>\n\n        <Hidden smUp>\n          {user && (\n            <>\n              <DeleteAccountDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...deleteAccountDialog.dialogProps\n                }}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...deleteAccountDialog.props}\n              />\n            </>\n          )}\n\n          {!user && (\n            <>\n              <SignUpDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...signUpDialog.dialogProps\n                }}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...signUpDialog.props}\n              />\n\n              <SignInDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...signInDialog.dialogProps\n                }}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...signInDialog.props}\n              />\n            </>\n          )}\n        </Hidden>\n\n        <Hidden mdUp>\n          {user && (\n            <>\n              <SettingsDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...settingsDialog.dialogProps\n                }}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...settingsDialog.props}\n              />\n            </>\n          )}\n        </Hidden>\n      </>\n    );\n  }\n}\n\nDialogHost.propTypes = {\n  // Properties\n  performingAction: PropTypes.bool.isRequired,\n  theme: PropTypes.object.isRequired,\n  user: PropTypes.object,\n  userData: PropTypes.object,\n  dialogs: PropTypes.object.isRequired,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default DialogHost;\n","import React, { Component } from \"react\";\n\nimport readingTime from \"reading-time\";\n\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport { auth, firestore } from \"../../firebase\";\nimport authentication from \"../../services/authentication\";\nimport appearance from \"../../services/appearance\";\n\nimport ErrorBoundary from \"../ErrorBoundary\";\nimport LaunchScreen from \"../LaunchScreen\";\nimport Bar from \"../Bar\";\nimport Router from \"../Router\";\nimport DialogHost from \"../DialogHost\";\n\nconst initialState = {\n  ready: false,\n  performingAction: false,\n  theme: appearance.defaultTheme,\n  user: null,\n  userData: null,\n  roles: [],\n\n  aboutDialog: {\n    open: false\n  },\n\n  signUpDialog: {\n    open: false\n  },\n\n  signInDialog: {\n    open: false\n  },\n\n  settingsDialog: {\n    open: false\n  },\n\n  deleteAccountDialog: {\n    open: false\n  },\n\n  signOutDialog: {\n    open: false\n  },\n\n  snackbar: {\n    autoHideDuration: 0,\n    message: \"\",\n    open: false\n  }\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  resetState = callback => {\n    this.setState(\n      {\n        ready: true,\n        theme: appearance.defaultTheme,\n        user: null,\n        userData: null,\n        roles: []\n      },\n      callback\n    );\n  };\n\n  setTheme = (theme, callback) => {\n    if (!theme) {\n      this.setState(\n        {\n          theme: appearance.defaultTheme\n        },\n        callback\n      );\n\n      return;\n    }\n\n    this.setState(\n      {\n        theme: appearance.createTheme(theme)\n      },\n      callback\n    );\n  };\n\n  openDialog = (dialogId, callback) => {\n    const dialog = this.state[dialogId];\n\n    if (!dialog || dialog.open === undefined || null) {\n      return;\n    }\n\n    dialog.open = true;\n\n    this.setState({ dialog }, callback);\n  };\n\n  closeDialog = (dialogId, callback) => {\n    const dialog = this.state[dialogId];\n\n    if (!dialog || dialog.open === undefined || null) {\n      return;\n    }\n\n    dialog.open = false;\n\n    this.setState({ dialog }, callback);\n  };\n\n  closeAllDialogs = callback => {\n    this.setState(\n      {\n        aboutDialog: {\n          open: false\n        },\n\n        signUpDialog: {\n          open: false\n        },\n\n        signInDialog: {\n          open: false\n        },\n\n        settingsDialog: {\n          open: false\n        },\n\n        deleteAccountDialog: {\n          open: false\n        },\n\n        signOutDialog: {\n          open: false\n        }\n      },\n      callback\n    );\n  };\n\n  deleteAccount = () => {\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        authentication\n          .deleteAccount()\n          .then(() => {\n            this.closeAllDialogs(() => {\n              this.openSnackbar(\"Deleted account\");\n            });\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  signOut = () => {\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        authentication\n          .signOut()\n          .then(() => {\n            this.closeAllDialogs(() => {\n              this.openSnackbar(\"Signed out\");\n            });\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  openSnackbar = (message, autoHideDuration = 2, callback) => {\n    this.setState(\n      {\n        snackbar: {\n          autoHideDuration: readingTime(message).time * autoHideDuration,\n          message,\n          open: true\n        }\n      },\n      () => {\n        if (callback && typeof callback === \"function\") {\n          callback();\n        }\n      }\n    );\n  };\n\n  closeSnackbar = (clearMessage = false) => {\n    const { snackbar } = this.state;\n\n    this.setState({\n      snackbar: {\n        message: clearMessage ? \"\" : snackbar.message,\n        open: false\n      }\n    });\n  };\n\n  render() {\n    const {\n      ready,\n      performingAction,\n      theme,\n      user,\n      userData,\n      roles\n    } = this.state;\n\n    const {\n      aboutDialog,\n      signUpDialog,\n      signInDialog,\n      settingsDialog,\n      deleteAccountDialog,\n      signOutDialog\n    } = this.state;\n\n    const { snackbar } = this.state;\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n\n        <ErrorBoundary>\n          {!ready && <LaunchScreen />}\n\n          {ready && (\n            <>\n              <Router\n                user={user}\n                roles={roles}\n                bar={\n                  <Bar\n                    performingAction={performingAction}\n                    theme={theme}\n                    user={user}\n                    userData={userData}\n                    roles={roles}\n                    onSignUpClick={() => this.openDialog(\"signUpDialog\")}\n                    onSignInClick={() => this.openDialog(\"signInDialog\")}\n                    onAboutClick={() => this.openDialog(\"aboutDialog\")}\n                    onSettingsClick={() => this.openDialog(\"settingsDialog\")}\n                    onSignOutClick={() => this.openDialog(\"signOutDialog\")}\n                  />\n                }\n                openSnackbar={this.openSnackbar}\n              />\n\n              <DialogHost\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={this.openSnackbar}\n                dialogs={{\n                  aboutDialog: {\n                    dialogProps: {\n                      open: aboutDialog.open,\n\n                      onClose: () => this.closeDialog(\"aboutDialog\")\n                    }\n                  },\n\n                  signUpDialog: {\n                    dialogProps: {\n                      open: signUpDialog.open,\n\n                      onClose: callback => {\n                        this.closeDialog(\"signUpDialog\");\n\n                        if (callback && typeof callback === \"function\") {\n                          callback();\n                        }\n                      }\n                    }\n                  },\n\n                  signInDialog: {\n                    dialogProps: {\n                      open: signInDialog.open,\n\n                      onClose: callback => {\n                        this.closeDialog(\"signInDialog\");\n\n                        if (callback && typeof callback === \"function\") {\n                          callback();\n                        }\n                      }\n                    }\n                  },\n\n                  settingsDialog: {\n                    dialogProps: {\n                      open: settingsDialog.open,\n\n                      onClose: () => this.closeDialog(\"settingsDialog\")\n                    },\n\n                    props: {\n                      onDeleteAccountClick: () =>\n                        this.openDialog(\"deleteAccountDialog\")\n                    }\n                  },\n\n                  deleteAccountDialog: {\n                    dialogProps: {\n                      open: deleteAccountDialog.open,\n\n                      onClose: () => this.closeDialog(\"deleteAccountDialog\")\n                    },\n\n                    props: {\n                      deleteAccount: this.deleteAccount\n                    }\n                  },\n\n                  signOutDialog: {\n                    dialogProps: {\n                      open: signOutDialog.open,\n\n                      onClose: () => this.closeDialog(\"signOutDialog\")\n                    },\n\n                    props: {\n                      title: \"Sign out?\",\n                      contentText:\n                        \"While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.\",\n                      dismissiveAction: (\n                        <Button\n                          color=\"primary\"\n                          onClick={() => this.closeDialog(\"signOutDialog\")}\n                        >\n                          Cancel\n                        </Button>\n                      ),\n                      confirmingAction: (\n                        <Button\n                          color=\"primary\"\n                          disabled={performingAction}\n                          variant=\"contained\"\n                          onClick={this.signOut}\n                        >\n                          Sign Out\n                        </Button>\n                      )\n                    }\n                  }\n                }}\n              />\n\n              <Snackbar\n                autoHideDuration={snackbar.autoHideDuration}\n                message={snackbar.message}\n                open={snackbar.open}\n                onClose={this.closeSnackbar}\n              />\n            </>\n          )}\n        </ErrorBoundary>\n      </MuiThemeProvider>\n    );\n  }\n\n  componentDidMount() {\n    this.onAuthStateChangedObserver = auth.onAuthStateChanged(\n      user => {\n        // The user is not signed in or doesn’t have a user ID.\n        if (!user || !user.uid) {\n          if (this.userDocumentSnapshotListener) {\n            this.userDocumentSnapshotListener();\n          }\n\n          this.resetState();\n\n          return;\n        }\n\n        // The user is signed in, begin retrieval of external user data.\n        this.userDocumentSnapshotListener = firestore\n          .collection(\"users\")\n          .doc(user.uid)\n          .onSnapshot(\n            snapshot => {\n              const data = snapshot.data();\n\n              // The user doesn’t have a data point, equivalent to not signed in.\n              if (!snapshot.exists || !data) {\n                if (this.userDocumentSnapshotListener) {\n                  this.userDocumentSnapshotListener();\n                }\n\n                this.resetState();\n\n                return;\n              }\n\n              authentication\n                .getRoles()\n                .then(value => {\n                  this.setTheme(data.theme, () => {\n                    this.setState({\n                      ready: true,\n                      user: user,\n                      userData: data,\n                      roles: value || []\n                    });\n                  });\n                })\n                .catch(reason => {\n                  this.resetState(() => {\n                    const code = reason.code;\n                    const message = reason.message;\n\n                    switch (code) {\n                      default:\n                        this.openSnackbar(message);\n                        return;\n                    }\n                  });\n                });\n            },\n            error => {\n              this.resetState(() => {\n                const code = error.code;\n                const message = error.message;\n\n                switch (code) {\n                  default:\n                    this.openSnackbar(message);\n                    return;\n                }\n              });\n            }\n          );\n      },\n      error => {\n        this.resetState(() => {\n          const code = error.code;\n          const message = error.message;\n\n          switch (code) {\n            default:\n              this.openSnackbar(message);\n              return;\n          }\n        });\n      }\n    );\n  }\n\n  componentWillUnmount() {\n    if (this.onAuthStateChangedObserver) {\n      this.onAuthStateChangedObserver();\n    }\n\n    if (this.userDocumentSnapshotListener) {\n      this.userDocumentSnapshotListener();\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"typeface-roboto\";\nimport \"./index.css\";\nimport * as Sentry from \"@sentry/browser\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nSentry.init({\n  dsn: process.env.REACT_APP_SENTRY_DSN,\n  release: `${process.env.REACT_APP_NAME}@${process.env.REACT_APP_VERSION}`\n});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}